<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Default for Logika Matematika</text>
    </category>
    <info format="moodle_auto_format">
      <text>The default category for questions shared in context 'Logika Matematika'.</text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
      <text>$course$/top/Default for Logika Matematika/CLO 2</text>
    </category>
    <info format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">Online Quiz for CLO 2<br></p>]]></text>
    </info>
    <idnumber></idnumber>
  </question>

<!-- question: 29633819  -->
  <question type="matching">
    <name>
      <text>Logika Predikat 1.1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose \( P (x) := 3x \leq x^2 \). If the domain we consider is \( D = \lbrace{0, 1, 2, 3}\rbrace \), determine the truth value of the following formulas:<br></p><p><strong>ID:</strong> Misal&nbsp;\( P (x) := 3x \leq x^2 \). Jika domain yang ditinjau adalah&nbsp;\( D = \lbrace{0, 1, 2, 3}\rbrace \), tentukan nilai kebenaran untuk formula-formula berikut:<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \exists x P (x)  \)<br></p>]]></text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \forall x P (x)  \)<br></p>]]></text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>None</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633820  -->
  <question type="matching">
    <name>
      <text>Logika Predikat 1.10</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong>
 Determine the analogy of propositional operators of the following 
quantifiers if the domain is finite. \(P\) is a unary predicate.<br></p><p><strong>ID:</strong>
 Tentukan analagi operator proposisional untuk setiap kuantor berikut 
bila domain yang ditinjau berhingga. \(P\) adalah predikat uner.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \exists x P (x)  \)<br></p>]]></text>
      <answer>
        <text>disjunction (disjungsi)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \forall x P (x)  \)<br></p>]]></text>
      <answer>
        <text>conjunction (konjungsi)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>negation (negasi)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>implication (implikasi)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>bi-implication (biimplikasi)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633821  -->
  <question type="matching">
    <name>
      <text>Pemrograman Logika: Simbol</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Match the following equality and inequality symbols to their corresponding Prolog equivalents.</p><p><strong>ID</strong>: Pasangkan simbol kesamaan dan ketidaksamaan berikut dengan simbolnya yang sesuai pada Prolog.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>=</p>]]></text>
      <answer>
        <text>=:=</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \neq  \)<br></p>]]></text>
      <answer>
        <text>=\=</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>&gt;</p>]]></text>
      <answer>
        <text><![CDATA[>]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \geq  \)<br></p>]]></text>
      <answer>
        <text><![CDATA[>=]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text><![CDATA[=>]]></text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>=/=</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633822  -->
  <question type="matching">
    <name>
      <text>Predicate Logic:  Truth Values (1)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose we have the following predicate \(P(x) := x^2 \leq 2020 \). Determine the truth values of the following expression:<br></p><p dir="ltr" style="text-align: left;"><strong>ID:</strong> Misalkan kita memiliki predikat \(P(x):= x^2 \leq 2020\). Tentukan nilai kebenaran dari ekspresi-ekspresi berikut:<br></p><p dir="ltr" style="text-align: left;"><br></p><p dir="ltr" style="text-align: left;"><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(P(40)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(-40)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(44)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(-44)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(45)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(-45)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(46)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(-46)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633823  -->
  <question type="matching">
    <name>
      <text>Predicate Logic:  Truth Values (2)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose we have the following predicate \(Q(x,y) := x+y \leq y^2\). Determine the truth values of the following expression:<br></p><p dir="ltr" style="text-align: left;"><strong>ID:</strong> Misalkan kita memiliki predikat \(Q(x,y) := x+y \leq y^2\). Tentukan nilai kebenaran dari ekspresi-ekspresi berikut:<br></p><p dir="ltr" style="text-align: left;"><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(Q(1,2)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(2,1)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(-1,2)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(2,-1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(1,1)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(-1,-1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(-1,0)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(1,0)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633824  -->
  <question type="matching">
    <name>
      <text>Predicate Logic:  Truth Values (3)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose we have the following predicate \(R(x,y,z) := x-y \leq z\). Determine the truth values of the following expression:<br></p><p dir="ltr" style="text-align: left;"><strong>ID:</strong> Misalkan kita memiliki predikat \(R(x,y,z) := x-y \leq z\). Tentukan nilai kebenaran dari ekspresi-ekspresi berikut:<br></p><p dir="ltr" style="text-align: left;"><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(R(3,2,1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(3,1,2)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(2,1,3)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(2,3,1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(1,1,-1)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(1,-1,1)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(-1,1,1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(R(1,-1,-1)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633825  -->
  <question type="matching">
    <name>
      <text>Predicate Logic:  Truth Values (4)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose we have the following predicate \(P(x):= 3x \geq x^2 + 1\). Determine the truth values of the following expression:<br></p><p dir="ltr" style="text-align: left;"><strong>ID:</strong> Misalkan kita memiliki predikat \(P(x):= 3x \geq x^2 + 1\). Tentukan nilai kebenaran dari ekspresi-ekspresi berikut:<br></p><p dir="ltr" style="text-align: left;"><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(P(0)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x P(x)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x P(x)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\neg \exists x P(x) \)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\neg \forall x P(x)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x \neg P(x)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x \neg P(x)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633826  -->
  <question type="matching">
    <name>
      <text>Predicate Logic:  Truth Values (5)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose we have the following predicate \(P(x):= 3x \geq x^2 + 1\) and \(Q(x):= x \geq x^2\). Determine the truth values of the following expression:<br></p><p dir="ltr" style="text-align: left;"><strong>ID:</strong> Misalkan kita memiliki predikat \(P(x):= 3x \geq x^2 + 1\) and \(Q(x):= x \geq x^2\). Tentukan nilai kebenaran dari ekspresi-ekspresi berikut:<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(P(0)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(0) \rightarrow P(1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(1) \rightarrow P(0)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(0) \rightarrow Q(0)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(2) \rightarrow Q(2)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x (P(x) \rightarrow Q(x))\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x (P(x)\wedge Q(x))\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633827  -->
  <question type="matching">
    <name>
      <text>Predikat 1: Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Match the following quantifiers with their name:<br></p><p><strong>ID:</strong> Cocokkan kuantor berikut dengan namanya:</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \forall x  \)<br></p>]]></text>
      <answer>
        <text>Universal Quantifier (Kuantor Universal)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \exists x  \)<br></p>]]></text>
      <answer>
        <text>Existential Quantifier (Kuantor Eksistensial)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>Implicational Quantifier (Kuantor Implikasional)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633828  -->
  <question type="matching">
    <name>
      <text>Predikat 1: Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Match the following quantifiers with their meaning:<strong><br></strong></p><p><strong>ID:</strong> Cocokkan kuantor-kuantor berikut dengan artinya:</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \forall x  \)<br></p>]]></text>
      <answer>
        <text>for all x (untuk setiap x)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \exists x  \)<br></p>]]></text>
      <answer>
        <text>there exist x (terdapat x)</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>not all x (tidak semua x)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633829  -->
  <question type="matching">
    <name>
      <text>Predikat 1: Presedens</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Sort the following operators and quantifiers based on their precedence (order of operation).<br></p><p><strong>ID: </strong>Urutkan operator dan kuantor berikut berdasarkan presedensnya (urutan pengerjaannya):</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \forall  \)<br></p>]]></text>
      <answer>
        <text>1</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\(  \exists  \)<br></p>]]></text>
      <answer>
        <text>2</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\( \neg \)</p>]]></text>
      <answer>
        <text>3</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\( \land \)</p>]]></text>
      <answer>
        <text>4</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\( \lor \)</p>]]></text>
      <answer>
        <text>5</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\( \oplus \)</p>]]></text>
      <answer>
        <text>6</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\( \rightarrow \)</p>]]></text>
      <answer>
        <text>7</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>\( \leftrightarrow \)</p>]]></text>
      <answer>
        <text>8</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633830  -->
  <question type="matching">
    <name>
      <text>Truth of Predicate Formulas (1)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Suppose \(P(x):\equiv (3x^2 \geq 6x)\) and \(Q(x):\equiv (x &lt; 3) \). If the domain of \(x\) consists of all integers, determine the truth value of each of the following expression.</p><p dir="ltr" style="text-align: left;"><strong>ID</strong>: Misalkan \(P(x):\equiv (3x^2 \geq 6x)\) dan \(Q(x):\equiv (x &lt; 3) \). Jika domain untuk \(x\) memuat seluruh bulangan bulat, tentukan nilai kebenaran dari ekspresi-ekspresi berikut.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(P(0)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(1)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(1)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(Q(3)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x P(x)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x P(x)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x \neg P(x)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x \neg P(x)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633831  -->
  <question type="matching">
    <name>
      <text>Truth of Predicate Formulas (2)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Suppose \(P(x):\equiv (3x^2 \geq 6x)\) and \(Q(x):\equiv (x &lt; 3) \). If the domain of \(x\) consists of all integers, determine the truth value of each of the following expression.</p><p dir="ltr" style="text-align: left;"><strong>ID</strong>: Misalkan \(P(x):\equiv (3x^2 \geq 6x)\) dan \(Q(x):\equiv (x &lt; 3) \). Jika domain untuk \(x\) memuat seluruh bulangan bulat, tentukan nilai kebenaran dari ekspresi-ekspresi berikut.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(\forall x P(x) \rightarrow \forall x Q(x) \)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x (P(x) \rightarrow Q(x)) \)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x P(x) \wedge \exists x Q(x)\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x (P(x) \wedge Q(x))\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x P(x) \rightarrow \exists x Q(x) \)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x Q(x) \rightarrow \forall x P(x) \)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x (P(x) \vee Q(x))\)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x P(x) \vee \forall x Q(x))\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633832  -->
  <question type="matching">
    <name>
      <text>Truth of Predicate Formulas (3)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr"><strong>EN</strong>:
 Suppose \(P(x,y):\equiv (x+y = xy) \). If the domain of \(x\) and \(y\) consists of all integers, determine the truth 
value of each of the following expressions.</p><p dir="ltr"><strong>ID</strong>:
 Misalkan \(P(x,y):\equiv (x+y = xy)\). Jika domain untuk \(x\) dan \(y\) memuat seluruh bulangan bulat, tentukan 
nilai kebenaran dari ekspresi-ekspresi berikut.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <shuffleanswers>true</shuffleanswers>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text>\(P(1,2) \)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(P(2,2) \)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x \forall y P(x,y) \)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x \exists y P(x,y) \)</text>
      <answer>
        <text>True</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists y P(1,y)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall x \exists y P(x,y)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\forall y P(1,y)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text>\(\exists x \forall y P(x,y)\)</text>
      <answer>
        <text>False</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>cannot be determined (tidak dapat ditentukan)</text>
      </answer>
    </subquestion>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633833  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1: Kuantifikasi Bersusun/ Bersarang</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> Suppose \(M(x,y)\) means "Lecture \(x\) teaches subject \(y\)" where the domain of \(x\) is the set of all lecturers in Tel-U and the domain of \(y\) is the set of all subjects in Tel-U.&nbsp; Select all sentences that are represented by \(\forall x \exists y M(x,y) \).</p><p><strong>ID:</strong> Misalkan\(M(x,y)\) berarti "Dosen \(x\) 
mengajar kuliah \(y\)" dengan domain untuk \(x\) adalah himpunan seluruh dosen di Tel-U dan domain untuk \(y\) adalah himpunan seluruh mata kuliah di Tel-U.&nbsp; Pilihlah semua kalimat yang direpresentasikan dengan \(\forall x 
\exists y M(x,y) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>"for every lecturer \(x\) there is a subject \(y\) taught by him/her" <br></p><p>(“untuk setiap dosen \(x\) ada mata kuliah \(y\) yang diajarkannya”  
)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>"every lecturer at Tel-U teaches at least one subject"<br></p><p>(“setiap dosen di Tel-U setidaknya mengajar satu mata kuliah” 
)<br>
<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>"there exists a subject \(y\) taught by every lecturer \(x\)"<br></p><p>(“terdapat mata kuliah \(y\) yang diajarkan oleh semua dosen \(x\))” 
<br>
<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>"there is a subject that is taught by every lecturer at Tel-U"<br></p><p>(“ada kuliah yang dapat diajarkan semua dosen di Tel-U”)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633834  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1: Kuantifikasi Bersusun/ Bersarang (copy)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> 
Suppose \(M(x,y)\) means "Lecture \(x\) teaches subject \(y\)" where the
 domain of \(x\) is the set of all lecturers in Tel-U and the domain of 
\(y\) is the set of all subjects in Tel-U.&nbsp; Select all sentences that 
are represented by \(\exists y \forall x&nbsp; M(x,y) \).</p><p><strong>ID:</strong>
 Misalkan\(M(x,y)\) berarti "Dosen \(x\) 
mengajar kuliah \(y\)" dengan domain untuk \(x\) adalah himpunan seluruh
 dosen di Tel-U dan domain untuk \(y\) adalah himpunan seluruh mata 
kuliah di Tel-U.&nbsp; Pilihlah semua kalimat yang direpresentasikan dengan 
\(\exists y \forall x&nbsp; M(x,y) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>"for every lecturer \(x\) there is a subject \(y\) taught by him/her" <br></p><p>(“untuk setiap dosen \(x\) ada mata kuliah \(y\) yang diajarkannya”  
)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>"every lecturer at Tel-U teaches at least one subject"<br></p><p>(“setiap dosen di Tel-U setidaknya mengajar satu mata kuliah” 
)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>"there exists a subject \(y\) taught by every lecturer \(x\)"<br></p>
<p>(“terdapat mata kuliah \(y\) yang diajarkan oleh semua dosen \(x\))”</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>"there is a subject that is taught by every lecturer at Tel-U"<br></p><p>(“ada kuliah yang dapat diajarkan semua dosen di Tel-U”)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633835  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1.2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> Suppose \( P (x) := 3x \leq
x^2 \). If the domain we consider is \( D = \lbrace{0, 1, 2, 3}\rbrace \), what is the truth value of \(  \exists x P (x)  \).<br></p><p><strong>ID: </strong>Misalkan \( P (x) := 3x \leq
x^2 \). Jika domain yang ditinjau adalah&nbsp;\( D = \lbrace{0, 1, 2, 3}\rbrace \), tentukan nilai
kebenaran untuk&nbsp;\(  \exists x P (x)  \).</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633836  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1.3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> Suppose \( P (x) := 3x \leq
x^2 \). If the domain we consider is \( D = \lbrace{0, 1, 2, 3}\rbrace \), what is the truth value of \(  \forall x P (x)  \).<br></p><p><strong>ID: </strong>Misalkan \( P (x) := 3x \leq
x^2 \). Jika domain yang ditinjau adalah&nbsp;\( D = \lbrace{0, 1, 2, 3}\rbrace \), tentukan nilai
kebenaran untuk&nbsp;\(  \forall x P (x)  \).</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633837  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1.4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> Suppose \( P (x) := 3x \geq x + 1  \). If the domain we consider is the set of all integers, determine the truth value of \(\sim \exists x P(x) \).<br></p><p><strong>ID:</strong> Misalkan \( P (x) := 3x \geq x + 1  \). Jika domain yang ditinjau adalah bilangan bulat, tentukan nilai kebenaran dari&nbsp;\(  \sim \exists x P (x)  \).<br></p><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">cannot be determined (tidak dapat ditentukan)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633838  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1.5</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> 
Suppose \( P (x) := 3x \geq x + 1  \). If the domain we consider is the 
set of all integers, determine the truth value of \(\sim \forall x P(x) 
\).<br></p><p><strong>ID:</strong> 
Misalkan \( P (x) := 3x \geq x + 1  \). Jika domain yang ditinjau adalah
 bilangan bulat, tentukan nilai kebenaran dari&nbsp;\(  \sim \forall x P (x) 
 \).<br></p><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">cannot be determined (tidak dapat ditentukan)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633839  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 1.6</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong> 
Suppose \( P (x) := 3x \geq x + 1  \). If the domain we consider is the 
set of all integers, determine the truth value of \(\forall x \sim P(x) 
\).<br></p><p><strong>ID:</strong> 
Misalkan \( P (x) := 3x \geq x + 1  \). Jika domain yang ditinjau adalah
 bilangan bulat, tentukan nilai kebenaran dari&nbsp;\(\forall x \sim P(x) 
\).<br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;">cannot be determined (tidak dapat ditentukan)<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633840  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN: </strong>Select all phrases that <strong>do not correspond</strong> to the quantifier \(  \forall x  \).</p><p><strong>ID:</strong> Pilihlah semua frase yang <strong>tidak terkait</strong> dengan kuantor \(\forall x\).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="33.33333" format="html">
      <text>there exists \(x\) (terdapat \(x\))</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text>there is \(x\) (ada \(x\))</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>for all \(x\) (untuk semua \(x\))</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>all \(x\) (semua \(x\))</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>for every \(x\) (untuk setiap \(x)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text>some \(x\) (beberapa \(x\))</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>every \(x\) (setiap \(x\))</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633841  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.10</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose&nbsp;\( Q (x, y) := x+2y \leq 2x-2y \). If the domain for \(x\) and \(y\) is the set of all integers, what is the truth value of the negation of the formula \(  \exists x \exists y Q (x, y) \)?</p><p><strong>ID:</strong> Misalkan \( Q (x, y) := x+2y \leq 2x-2y 
\). Jika domain untuk \(x\) dan \(y\) adalah himpunan seluruh bilangan bulat, apa nilai kebenaran dari negasi untuk formula \(  \exists x \exists y
 Q (x, y) \)?</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633842  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose \( Q (x) := x+1 &lt; 2x  \), if the domain of \(x\) is the set of all integers, what is the truth value of \(Q(1)\)?</p><p><strong>ID</strong>: Misalkan \( Q (x) := x+1 &lt; 2x  \), jika domain untuk \(x\) adalah himpunan bilangan bulat, apakah nilai kebenaran untuk \(Q(1)\)?</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633843  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose \(Q(x):= x+1 &lt; 2x\). If the domain of \(x\) is the set of all integers, what is the truth value of \(\exists x Q(x)\)?</p><p><strong>ID</strong>: Misalkan \(Q(x):= x+1 &lt; 2x \). JIka domain untuk \(x\) adalah himpunan seluruh bilangan bulat, apakah nilai kebenaran dari \(\exists x Q(x)\)?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633844  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.5</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose 
\(Q(x):= x+1 &lt; 2x\). If the domain of \(x\) is the set of all 
integers, what is the truth value of \(\forall x Q(x)\)?</p><p><strong>ID</strong>:
 Misalkan \(Q(x):= x+1 &lt; 2x \). JIka domain untuk \(x\) adalah 
himpunan seluruh bilangan bulat, apakah nilai kebenaran dari \(\forall x
 Q(x)\)?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633845  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.6</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose \( Q (x, y) := x+2y \leq 2x-2y \). If the domain for \(x\) and \(y\) are the set of integers, what is the truth value of \(Q(1,3)\)?</p><p><strong>ID</strong>: Misalkan \( Q (x, y) := x+2y \leq 2x-2y \). Apabila domain untuk \(x\) dan \(y\) adalah himpunan bilangan bulat, apa nilai kebenaran dari \(Q(1,3)\)?<br></p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633846  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.7</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose \(Q(x,y):= x + 2y \leq 2x - 2y\). If the domain of \(x\) and \(y\) are the set of integers, what is the truth value of \(  \exists x \exists y Q (x, y) \)?<strong><br></strong></p><p><strong>ID</strong>: Misalkan \(Q(x,y):= x + 2y \leq 2x - 2y\). Jika domain unutk \(x\) dan \(y\) adalah himpunan bilangan bulat, apakah nilai kebenaran dari \(  \exists x \exists y Q
 (x, y) \)?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633847  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.8</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose 
\(Q(x,y):= x + 2y \leq 2x - 2y\). If the domain of \(x\) and \(y\) are 
the set of integers, what is the truth value of \(  \forall x \forall y Q
 (x, y) \)?<strong><br></strong></p><p><strong>ID</strong>:
 Misalkan \(Q(x,y):= x + 2y \leq 2x - 2y\). Jika domain unutk \(x\) dan 
\(y\) adalah himpunan bilangan bulat, apakah nilai kebenaran dari </p><p>\(  \forall x \forall y Q
 (x, y) \)?<strong><br></strong></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633848  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 2.9</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose 
\(Q(x,y):= x + 2y \leq 2x - 2y\). If the domain of \(x\) and \(y\) are 
the set of integers, what is the truth value of the negation of the formula \(  \forall x \forall y Q
 (x, y) \)?<strong><br></strong></p><p><strong>ID</strong>:
 Misalkan \(Q(x,y):= x + 2y \leq 2x - 2y\). Jika domain unutk \(x\) dan 
\(y\) adalah himpunan bilangan bulat, apakah nilai kebenaran dari negasi formula \(  \forall x \forall y Q
 (x, y) \)?<strong><br></strong></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>true</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>false</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>cannot be determined (tidak dapat ditentukan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633849  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3: Aturan Inferensi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Choose all basic rules of inferences in first-order predicate logic:<br></p><p><strong>ID</strong>: Pilih semua aturan inferensi dasar pada logika predikat order pertama: <br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="25" format="html">
      <text>universal instantiation (instansiasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text>universal generalization (generalisasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text>existential instantiation (instansiasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text>existential generalization (generalisasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>existentilal modus ponens (modus ponens eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633850  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3: Negasi Kalimat dengan Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Determine the negation of the sentence: "there is an informatics student who doesn't use a computer everyday".</p><p><strong>ID</strong>: Tentukan negasi dari kalimat: "ada mahasiswa informatika yang tidak memakai komputer setiap hari"<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>There is an informatics student who uses computer everyday. (Ada mahasiwa informatika yang setiap hari memakai komputer.)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>Every informatics student uses computer everyday. (Setiap mahasiswa informaitka menggunakan komputer setiap hari.)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Every informatics student uses computer at least one day. (Setiap mahasiswa informatika memakai komputer setidaknya pada satu hari.)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Every informatics student doesn't use computer everyday. (Setiap mahasiswa informatika tidak memakai komputer setiap hari.)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Some informatics student doesn't use computer everyday. (Beberapa mahasiswa informatika tidak memakai komputer setiap hari.)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>There is no correct choice. (Tidak ada pilihan yang benar.)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633851  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose we have the predicate \( Pilot(x): x \textrm{ is a pilot} \) where the domain of \(x\) is \( D=\lbrace x |x \textrm{ is a person}\rbrace \). Translate "Rijal is a pilot" into a predicate logic formula.<br></p><p><strong>ID</strong>: Misalkan kita memiliki predikat \( Pilot(x): x \textrm{ adalah seorang pilot} \) dengan domain untuk \(x\) adalah \(D =\lbrace x| x \textrm{ adalah manusia}\rbrace \). Terjemahkan "Rijal adalah pilot" ke dalam formula logika predikat.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>\( Pilot(Rijal) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\(Rijal \textrm{ is a pilot}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\(Pilot \textrm{ is Rijal}\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\(Rijal(Pilot)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\(is\_Pilot(Rijal)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633852  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.10</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the 
predicate \(Likes(x,y): x \textrm{ likes } y\) where the domain of \(x\)
 is the set of all people and the domain of \(y\) is the set of all 
foods. Determine the meaning of the predicate formula \(\exists x \exists y Likes(x,y)\).</p><p><strong>ID</strong>: Diberikan predikat 
\(Likes(x,y): x \textrm{ menyukai } y\) dengan domain untuk \(x\)
 adalah himpunan seluruh orang dan domain untuk \(y\) adalah himpunan 
seluruh makanan. Tentukan arti dari formula logika predikat \(\exists x \exists y Likes(x,y)\).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[someone likes every food (ada orang yang menyukai semua makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is a food which is liked by everyone (ada makanan yang disukai semua orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[everyone likes at least one food (semua orang menyukai setidaknya satu makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[someone likes some foods (ada orang yang menyukai beberapa makanan)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[all people like all kinds of food (semua orang menyukai semua makanan)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>every food is liked by at least one person (setiap makanan disukai oleh setidaknya satu orang)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633853  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.11</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Determine the negation of the sentence "every laptop is everyday in the storefront in a whole year".<strong><br></strong></p><p><strong>ID</strong>: Tentukan negasi dari kalimat "semua laptop setiap hari berada di toko dalam satu tahun".</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>every laptop is everyday in the storefront in a whole year (semua laptop setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>every laptop is not everyday in the storefront in a whole year (setiap 
laptop tidak setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>there is a laptop which is everyday in the storefront in a whole year 
(ada laptop yang setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>some laptops are not everyday in the storefront in a whole year 
(beberapa laptop tidak setiap hari berada di etalase toko dalam satu 
tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is no correct answer (tidak ada jawaban yang tepat)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633854  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.12</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose we have the following premises:</p><ol><li>All Telkom University students have lived in the dormitory.</li><li>Mia has never lived in the dormitory.</li></ol><p>What can be concluded from these premises?<br></p><p><strong>ID</strong>: Misalkan kita memiliki premis berikut:</p><ol><li>Semua mahasiswa Telkom University pernah tinggal di asrama.</li><li>Mia tidak pernah tinggal di asrama.</li></ol>Apa yang dapat disimpulkan dari premis-premis ini?<br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>Mia is not Telkom University student (Mia bukan mahasiswa Universitas Telkom)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Mia is Telkom University student (Mia mahasiswa Universitas Telkom)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Mia has to live in the dormitory (Mia harus tinggal di asrama)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Mia does not have to live in the dormitory (Mia tidak harus tinggal di asrama)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>Mia used to live in the dormitory (Mia pernah tinggal di asrama)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633855  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose we have the predicate \(Informatics(x): x \textrm{ is an informatics student}\) and \(Engineering(x): x \textrm{ is an engineering student} \). Translate the sentence: "every informatics student is an engineering student".</p><p><strong>ID</strong>: Misalkan kita memiliki predikat \(Informatics(x): x \textrm{ adalah mahasiswa informatika}\) dan \(Engineering(x): x \textrm{ adalah mahasiswa teknik} \). Terjemahkan kalimat: "setiap mahasiswa informatika adalah mahasiswa teknik".<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>\( \forall x (Informatics (x) \rightarrow Engineering (x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x (Informatics (x) \rightarrow Engineering (x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x (Engineering(x) \rightarrow Informatics (x))\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x (Engineering(x) \rightarrow Informatics (x))\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x (Informatics(x) \wedge Engineering (x))\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x (Informatics(x) \wedge Engineering (x))\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633856  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Translate the sentence "Calculus is a difficult course" into its corresponding predicate formula using the predicate \(Difficult(x): x \textrm{ is a difficult course}\) whose domain for \(x\) is the set of all courses.<br></p><p><strong>ID</strong>: Terjemahkan kalimat "Kalkulus adalah mata kuliah yang sulit" ke dalam formula logika predikat menggunakan predikat \(Difficult(x): x \textrm{ adalah mata kuliah yang sulit}\) dengan domain untuk \(x\) adalah himpunan seluruh mata kuliah. <br> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>\( Difficult(Calculus) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( Calculus(Difficult) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x Difficult(Calculus) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x Calculus(Difficult) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x Calculus(Difficult) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x Difficult(Calculus) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633857  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Determine the negation of the sentence "there is a laptop which is not everyday in the storefront in a whole year".</p><p><strong>ID</strong>: Tentukan negasi dari kalimat "ada laptop yang tidak setiap hari ada di etalase toko dalam satu tahun".<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>every laptop is everyday in the storefront in a whole year (semua laptop setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>every laptop is not everyday in the storefront in a whole year (setiap laptop tidak setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>there is a laptop which is everyday in the storefront in a whole year (ada laptop yang setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>some laptops are not everyday in the storefront in a whole year (beberapa laptop tidak setiap hari berada di etalase toko dalam satu tahun)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is no correct answer (tidak ada jawaban yang tepat)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633858  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.5</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Translate the following sentence into a predicate logic formula: <strong>every engineering student likes Calculus or hates it</strong>. Use the predicate \(Eng(x): x \textrm{ is an engineering student} \), \(Likes(x,y): x \textrm{ likes }y\), and \(Hates(x,y): x \textrm{ hates }y\) where the domain of \(x\) is the set of all students and the domain of \(y\) is the set of all subjects.<br></p><p><strong>ID</strong>: Terjemahkan kalimat berikut ke dalam formula logika predikat: <strong>setiap mahasiswa teknik menyukai Kalkulus atau membecinya</strong>. Gunakan predikat \(Eng(x): x \textrm{ adalah mahasiswa teknik}\), \(Likes(x,y): x \textrm{ menyukai }y\), \(Hates(x,y): x \textrm{ membenci }y\) dengan domain untuk \(x\) adalah himpunan seluruh mahasiswa dan domain untuk \(y\) adalah himpunan seluruh mata kuliah.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>\( \forall x (Eng(x) \rightarrow Likes(x,Calculus) \vee Hates(x,Calculus)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x (Eng(x) \rightarrow Likes(x,Calculus) \wedge Hates(x,Calculus)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x (Likes(x,Calculus) \vee Hates(x,Calculus) \rightarrow Eng(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x (Eng(x) \wedge Likes(x,Calculus) \rightarrow Hates(x,Calculus)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x (Eng(x) \rightarrow Likes(x,Calculus) \vee Hates(x,Calculus)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x (Likes(x,Calculus) \vee Hates(x,Calculus) \rightarrow Eng(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633859  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.6</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the predicate \(Likes(x,y): x \textrm{ likes } y\) where the domain of \(x\) is the set of all people and the domain of \(y\) is the set of all foods. Determine the meaning of the predicate formula \(\exists x \forall y Likes(x,y)\).</p><p><strong>ID</strong>: Diberikan predikat \(Likes(x,y): x \textrm{ menyukai } y\) dengan domain untuk \(x\)
 adalah himpunan seluruh orang dan domain untuk \(y\) adalah himpunan seluruh makanan. Tentukan arti dari formula logika predikat \(\exists x 
\forall y Likes(x,y)\).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>someone likes every food (ada orang yang menyukai semua makanan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>there is a food which is liked by everyone (ada makanan yang disukai semua orang)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>everyone likes at least one food (semua orang menyukai setidaknya satu makanan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>there is a food which is liked by some people (ada makanan yang disukai beberapa orang)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>all people like all kinds of food (semua orang menyukai semua makanan)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633860  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.7</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the 
predicate \(Likes(x,y): x \textrm{ likes } y\) where the domain of \(x\)
 is the set of all people and the domain of \(y\) is the set of all 
foods. Determine the meaning of the predicate formula \(\exists y 
\forall x Likes(x,y)\).</p><p><strong>ID</strong>: Diberikan predikat 
\(Likes(x,y): x \textrm{ menyukai } y\) dengan domain untuk \(x\)
 adalah himpunan seluruh orang dan domain untuk \(y\) adalah himpunan 
seluruh makanan. Tentukan arti dari formula logika predikat \(\exists y \forall x Likes(x,y)\).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[someone likes every food (ada orang yang menyukai semua makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[there is a food which is liked by everyone (ada makanan yang disukai semua orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[everyone likes at least one food (semua orang menyukai setidaknya satu makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is a food which is liked by some people (ada makanan yang disukai beberapa orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[all people like all kinds of food (semua orang menyukai semua makanan)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633861  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.8</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the 
predicate \(Likes(x,y): x \textrm{ likes } y\) where the domain of \(x\)
 is the set of all people and the domain of \(y\) is the set of all 
foods. Determine the meaning of the predicate formula \(\forall y 
\exists x Likes(x,y)\).</p><p><strong>ID</strong>: Diberikan predikat 
\(Likes(x,y): x \textrm{ menyukai } y\) dengan domain untuk \(x\)
 adalah himpunan seluruh orang dan domain untuk \(y\) adalah himpunan 
seluruh makanan. Tentukan arti dari formula logika predikat \(\forall y \exists x Likes(x,y)\).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[someone likes every food (ada orang yang menyukai semua makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is a food which is liked by everyone (ada makanan yang disukai semua orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[everyone likes at least one food (semua orang menyukai setidaknya satu makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is a food which is liked by some people (ada makanan yang disukai beberapa orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[all people like all kinds of food (semua orang menyukai semua makanan)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>every food is liked by at least one person (setiap makanan disukai oleh setidaknya satu orang)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633862  -->
  <question type="multichoice">
    <name>
      <text>Logika Predikat 3.9</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the 
predicate \(Likes(x,y): x \textrm{ likes } y\) where the domain of \(x\)
 is the set of all people and the domain of \(y\) is the set of all 
foods. Determine the meaning of the predicate formula \(\forall x \exists y Likes(x,y)\).</p><p><strong>ID</strong>: Diberikan predikat 
\(Likes(x,y): x \textrm{ menyukai } y\) dengan domain untuk \(x\)
 adalah himpunan seluruh orang dan domain untuk \(y\) adalah himpunan 
seluruh makanan. Tentukan arti dari formula logika predikat \(\forall x \exists y Likes(x,y)\).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[someone likes every food (ada orang yang menyukai semua makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is a food which is liked by everyone (ada makanan yang disukai semua orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[everyone likes at least one food (semua orang menyukai setidaknya satu makanan)<br><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[there is a food which is liked by some people (ada makanan yang disukai beberapa orang)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[all people like all kinds of food (semua orang menyukai semua makanan)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>every food is liked by at least one person (setiap makanan disukai oleh setidaknya satu orang)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633863  -->
  <question type="multichoice">
    <name>
      <text>Negation of quantified statements</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Choose all statements that are equivalent to the negation of "every informatics student learns Python".</p><p dir="ltr" style="text-align: left;"><strong>ID</strong>: Pilihlah semua pernyataan yang ekuivalen (setara) dengan negasi dari "setiap mahasiswa informatika belajar Python"<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>0</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text>there is an informatics student who does not learn Python
(ada mahasiswa informatika yang tidak belajar Python)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text>someone who does not learn Python is an informatics student
(seseorang yang tidak belajar Python adalah mahasiswa informatika)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>every informatics student does not learn Python
(setiap mahasiswa informatika tidak belajar Python)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>no informatics student learns Python
(tidak ada mahasiswa informatika yang mempelajari Python)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>all students who learns Python are not informatics student 
(semua mahasiswa yang belajar Python bukan mahasiswa informatika)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>none of the choices is correct (tidak ada pilihan yang benar)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633864  -->
  <question type="multichoice">
    <name>
      <text>Negation of quantified statements (1)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Choose all statements that are equivalent to the negation of "there is an informatics student who hates programming".</p><p dir="ltr" style="text-align: left;"><strong>ID</strong>: Pilihlah semua pernyataan yang ekuivalen (setara) dengan negasi dari "ada mahasiswa informatika yang membenci pemrograman"<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>0</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text>every informatics student does not hate programming (semua mahasiswa informatika tidak membenci pemrograman)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text>all people who hate programming are not informatics student (semua orang yang membenci pemrograman bukan mahasiswa informatika)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>there is an informatics student who does not hate programming
(ada mahasiswa informatika yang tidak membenci pemrograman)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>some informatics students do not have programming
(beberapa mahasiswa informatika tidak membenci pemrograman)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>someone who hates programming is not an informatics student
(seseorang yang membenci pemrograman bukan mahasiswa informatika)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>none of the choices is correct (tidak ada pilihan yang benar)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633865  -->
  <question type="multichoice">
    <name>
      <text>Pemograman Logika</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: In the following lists, which ones are imperative programming languages?<br></p><p><strong>ID</strong>: Di bawah ini mana saja yang termasuk contoh bahasa imperatif dalam pemograman?</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>C</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Pascal</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Python</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>Prolog</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>Logtalk</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633866  -->
  <question type="multichoice">
    <name>
      <text>Pemograman Logika (2)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: In the following lists, which ones are descriptive programming languages?<br><p></p>
<strong>ID</strong>: Di bawah ini mana saja yang termasuk contoh bahasa dalam pemograman deskriptif?<p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p>C</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p>Pascal</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p>Python</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>Prolog</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>Logtalk</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633867  -->
  <question type="multichoice">
    <name>
      <text>Pemograman Logika (3)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Select all facts of imperative languages:<br></p><p><strong>ID</strong>: Pilihlah semua fakta pada bahasa imperatif:<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a group of commands is assembled together using ";" or indentation.<br></p><p><strong>ID:</strong> perintah dirangkai dengan penyambung “;” atau indensasi (<em>indentation</em>).</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a command is controlled using selection (with <em>if-then-else</em> or <em>case-of </em>statements) or repetition (with <em>for</em> loop, <em>while</em> loop, or <em>repeat-until</em>).<br></p><p><strong>ID</strong>: perintah dikendalikan dengan kondisi seleksi (dengan <em>if-then-else</em> atau <em>case-of statement</em>) atau repetisi (dengan <em>for loop</em>, <em>while loop</em>, atau perintah <em>repeat-until</em>) .
<br><br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a computation in the program is a deduction or inference.<br></p><p><strong>ID</strong>: sebuah komputasi pada program adalah suatu deduksi atau inferensi.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a program is a set of expressions.<strong><br></strong></p><p><strong>ID</strong>: sebuah program adalah sekumpulan ekspresi.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a program consists of facts and rules.<br></p><p><strong>ID</strong>: sebuah program terdiri dari fakta (<em>facts</em>) dan aturan-aturan tertentu (<em>rules</em>) .
<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633868  -->
  <question type="multichoice">
    <name>
      <text>Pemograman Logika (4)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Select all facts of descriptive languages:<br></p><p><strong>ID</strong>: Pilihlah semua fakta pada bahasa deskriptif:<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a group of commands is assembled together using ";" or indentation.<br></p><p><strong>ID:</strong> perintah dirangkai dengan penyambung “;” atau indensasi (<em>indentation</em>).</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a command is controlled using selection (with <em>if-then-else</em> or <em>case-of </em>statements) or repetition (with <em>for</em> loop, <em>while</em> loop, or <em>repeat-until</em>).<br></p><p><strong>ID</strong>: perintah dikendalikan dengan kondisi seleksi (dengan <em>if-then-else</em> atau <em>case-of statement</em>) atau repetisi (dengan <em>for loop</em>, <em>while loop</em>, atau perintah <em>repeat-until</em>) .
<br><br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a computation in the program is a deduction or inference.<br></p><p><strong>ID</strong>: sebuah komputasi pada program adalah suatu deduksi atau inferensi.<br></p><br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a program is a set of expressions.<strong><br></strong></p><p><strong>ID</strong>: sebuah program adalah sekumpulan ekspresi.<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p><strong>EN</strong>: a program consists of facts and rules.<br></p><p><strong>ID</strong>: sebuah program terdiri dari fakta (<em>facts</em>) dan aturan-aturan tertentu (<em>rules</em>) .
<br></p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633869  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: The symbol "=" is used in Prolog for the following command:<br></p><p><strong>ID</strong>: Tanda "=" pada Prolog digunakan untuk perintah berikut:<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>calculation (kalkulasi)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>term equality (kesamaan term)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>assigning new value (memberikan nilai baru)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>numerical equality (kesamaan numerik)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>variable definition (definisi variabel)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633870  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: What is the purpose of "is" predicate in Prolog?</p><p><strong>ID</strong>: Apa fungsi dari predikat "is" di Prolog?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>numerical calculation (kalkulasi numerik)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>term equality (kesamaan term)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>assigning new value (memberikan nilai baru)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>numerical equality (kesamaan numerik)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>variable definition (definisi variabel)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633871  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: In Prolog, how do we represent the operation \(x^y\) syntactically?<strong><br></strong></p><p><strong>ID</strong>: Di Prolog, bagaimana cara kita merepresentasikan \( x^y \) secara sintaks?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>x^y</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>x**y</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p>pow(x,y)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p>x%y</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text><![CDATA[<p>x*y</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633872  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>X = 5*3.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre>X = 5*3.<br></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 15.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = 5*3.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X is 15.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633873  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>X is 4*3.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre>X is 4*3.<br></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = 12.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 4*3.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X is 12.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633874  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>X is 8/5.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre><pre>X is 8/5.</pre></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = 1.6.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 1.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 8/5.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633875  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>X = 8/5.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre><pre>X = 8/5.</pre></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 1.6.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 1.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = 8/5.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633876  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>X = 8//5.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre><pre>X = 8//5.</pre></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 1.6.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 1.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = 8//5.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633877  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>3+2 =&lt; 3 - 2.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre><pre>3+2 =&lt; 3 - 2.</pre></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>true.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>5 =&lt; 1.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>Ok.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633878  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>3+2 =&gt; 3 - 2.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre><pre>3+2 =&gt; 3 - 2.</pre></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>true.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>5 =&gt; 1.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>Ok.<br></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633879  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Operasi Aljabar</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: What is the interpreter result of the following Prolog command:</p><pre>X is 10 mod 3.</pre><p><strong>ID</strong>: Apakah hasil interpreter dari perintah Prolog berikut:<br></p><pre><pre>X is 10 mod 3.</pre></pre>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>true.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = 1.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>X = 3.<br></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<pre>false.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>Error</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633880  -->
  <question type="multichoice">
    <name>
      <text>Pemrograman Logika: Perintah</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: What symbol is used to end a Prolog command?</p><p><strong>ID</strong>: Simbol apa yang digunakan untuk mengakhiri perintah pada Prolog?<br></p><br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>.</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>,</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>;</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>:</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>%</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>//</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\\</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633881  -->
  <question type="multichoice">
    <name>
      <text>Predicate Logic Translation</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Suppose we have a domain \( D = \lbrace x| x\textrm{ is a human} \rbrace \),&nbsp; \(David,Ethan \in D\) and the following predicates:</p><ul><li>\( \textsf{Male}(x): x \textrm{ is a male} \)</li><li>\( \textsf{Female}(x): x \textrm{ is a female} \)</li><li>\( \textsf{Adult}(x): x \textrm{ is an adult} \)</li><li>\( \textsf{Man}(x): x \textrm{ is a man} \)</li><li>\( \textsf{Woman}(x): x \textrm{ is a woman} \)</li></ul><p>Translate the sentence: David and Ethan are male.</p><p></p><p dir="ltr"><strong>EN</strong>:
Misalkan terdapat domain \( D = \lbrace x| x\textrm{ adalah manusia} 
\rbrace \),&nbsp; \(David,Ethan \in D\) dan predikat-predikat berikut:</p><ul><li>\( \textsf{Male}(x): x \textrm{ adalah laki-laki} \)</li><li>\( \textsf{Female}(x): x \textrm{ adalah perempuan} \)</li><li>\( \textsf{Adult}(x): x \textrm{ adalah orang dewasa} \)</li><li>\( \textsf{Man}(x): x \textrm{ adalah pria} \)</li><li>\( \textsf{Woman}(x): x \textrm{ adalah wanita} \)</li></ul><p>Terjemahkan kalimat berikut: David dan Ethan adalah laki-laki.<br></p><p></p><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>0</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>\( \textsf{Male}(David) \wedge \textsf{Male}(Ethan) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( \textsf{Male}(David \wedge Ethan) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( \textsf{Man}(David) \wedge \textsf{Man}(Ethan) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( \textsf{Man}(David \wedge (Ethan) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( \textsf{David}(Male) \wedge \textsf{Ethan}(Male) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( (\textsf{David} \wedge \textsf{Ethan})(Male) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( \textsf{David}(Man) \wedge \textsf{Ethan}(Man) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text>\( (\textsf{David} \wedge \textsf{Ethan})(Man) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633882  -->
  <question type="multichoice">
    <name>
      <text>Predicate Logic Translation (1)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Suppose we have a domain \( D = \lbrace x| x\textrm{ is a human} \rbrace \),&nbsp; \(David,Ethan \in D\) and the following predicates:</p><ul><li>\( \textsf{Male}(x): x \textrm{ is a male} \)</li><li>\( \textsf{Female}(x): x \textrm{ is a female} \)</li><li>\( \textsf{Adult}(x): x \textrm{ is an adult} \)</li><li>\( \textsf{Man}(x): x \textrm{ is a man} \)</li><li>\( \textsf{Woman}(x): x \textrm{ is a woman} \)</li></ul><p>Translate the sentence: every woman is a female.</p><p></p><p dir="ltr"><strong>EN</strong>:
Misalkan terdapat domain \( D = \lbrace x| x\textrm{ adalah manusia} 
\rbrace \),&nbsp; \(David,Ethan \in D\) dan predikat-predikat berikut:</p><ul><li>\( \textsf{Male}(x): x \textrm{ adalah laki-laki} \)</li><li>\( \textsf{Female}(x): x \textrm{ adalah perempuan} \)</li><li>\( \textsf{Adult}(x): x \textrm{ adalah orang dewasa} \)</li><li>\( \textsf{Man}(x): x \textrm{ adalah pria} \)</li><li>\( \textsf{Woman}(x): x \textrm{ adalah wanita} \)</li></ul><p>Terjemahkan kalimat berikut: setiap wanita adalah perempuan.<br></p><p></p><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>0</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text>\( \forall x (\textsf{Woman}(x) \rightarrow \textsf{Female}(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text>\( \forall y (\textsf{Woman}(y) \rightarrow \textsf{Female}(y)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text>\(  \forall x (\textsf{Female}(x) \rightarrow \textsf{Woman}(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text>\( \forall y (\textsf{Female}(y) \rightarrow \textsf{Woman}(y)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text>\( \forall x (\textsf{Woman}(x) \wedge \textsf{Female}(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text>\( \forall x ((\textsf{Woman} \rightarrow \textsf{Female})(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text>\( \forall x ((\textsf{Woman} \wedge\textsf{Female})(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-16.66667" format="html">
      <text>\( \forall x (x(\textsf{Woman})\rightarrow x(\textsf{Female}))  \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633883  -->
  <question type="multichoice">
    <name>
      <text>Predicate Logic Translation (2)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p dir="ltr" style="text-align: left;"><strong>EN</strong>: Suppose we have a domain \( D = \lbrace x| x\textrm{ is a human} \rbrace \),&nbsp; \(David,Ethan \in D\) and the following predicates:</p><ul><li>\( \textsf{Male}(x): x \textrm{ is a male} \)</li><li>\( \textsf{Female}(x): x \textrm{ is a female} \)</li><li>\( \textsf{Adult}(x): x \textrm{ is an adult} \)</li><li>\( \textsf{Man}(x): x \textrm{ is a man} \)</li><li>\( \textsf{Woman}(x): x \textrm{ is a woman} \)</li></ul><p>Translate the sentence: every adult male is a man.</p><p></p><p dir="ltr"><strong>EN</strong>:
Misalkan terdapat domain \( D = \lbrace x| x\textrm{ adalah manusia} 
\rbrace \),&nbsp; \(David,Ethan \in D\) dan predikat-predikat berikut:</p><ul><li>\( \textsf{Male}(x): x \textrm{ adalah laki-laki} \)</li><li>\( \textsf{Female}(x): x \textrm{ adalah perempuan} \)</li><li>\( \textsf{Adult}(x): x \textrm{ adalah orang dewasa} \)</li><li>\( \textsf{Man}(x): x \textrm{ adalah pria} \)</li><li>\( \textsf{Woman}(x): x \textrm{ adalah wanita} \)</li></ul><p>Terjemahkan kalimat berikut: setiap laki-laki dewasa adalah pria.<br></p><p></p><br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>0</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="25" format="html">
      <text>\( \forall x (\textsf{Male}(x) \wedge \textsf{Adult}(x) \rightarrow \textsf{Man}(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text>\( \forall x (\textsf{Adult}(x) \wedge \textsf{Male}(x) \rightarrow \textsf{Man}(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text>\( \forall y (\textsf{Adult}(y) \wedge \textsf{Male}(y) \rightarrow \textsf{Man}(y)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="25" format="html">
      <text>\( \forall y (\neg \textsf{Man}(y) \rightarrow \neg \textsf{Male}(y) \vee \neg \textsf{Adult}(y))
 \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\( \forall x (\textsf{Man}(x) \rightarrow \textsf{Male}(x) \wedge \textsf{Adult}(x)  ) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[\( \forall x (\textsf{Man}(x) \rightarrow \textsf{Adult}(x) \wedge \textsf{Male}(x)) \)<br>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\( \forall x (\textsf{Man}(x) \leftrightarrow \textsf{Adult}(x) \wedge \textsf{Male}(x)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text>\( \forall y (\textsf{Man}(x) \leftrightarrow \textsf{Adult}(y) \wedge \textsf{Male}(y)) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633884  -->
  <question type="multichoice">
    <name>
      <text>Predikat 1: Kuantifikasi bersusun</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose \(M(x,y)\) means "student \(x\) loves movie \(y\)" where the domain of \(x\) is the set of all students in Tel-U and the domain of \(y\) is the set of all movies. Select a formula that represents the sentence: "<strong>all students in Tel-U has a favorite movie</strong>."<br></p><p><strong>ID: </strong>Misalkan \(M(x,y)\) berarti "mahasiswa \(x\) menyukai film \(y\)" dengan domain \(x\) adalah himpunan seluruh mahasiswa di Tel-U dan domain untuk \(y\) adalah himpunan seluruh film. Pilihlah formula yang menyatakan: "<strong>semua mahasiswa Tel-U memiliki film favorit</strong>".</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>\( \forall x \exists y M(x,y) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x \forall y M(x,y) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x \exists y M(x,y) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x \forall y M(x,y) \)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633885  -->
  <question type="multichoice">
    <name>
      <text>Predikat 1: Kuantifikasi bersusun</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose 
\(M(x,y)\) means "student \(x\) loves movie \(y\)" where the domain of 
\(x\) is the set of all students in Tel-U and the domain of \(y\) is the set of all movies. Select a formula that represents the sentence: "<strong>a student in Tel-U likes a movie</strong><strong></strong>."<br></p><p><strong>ID: </strong>Misalkan
 \(M(x,y)\) berarti "mahasiswa \(x\) menyukai film \(y\)" dengan domain 
\(x\) adalah himpunan seluruh mahasiswa di Tel-U dan domain untuk \(y\) 
adalah himpunan seluruh film. Pilihlah formula yang menyatakan: "<strong>seorang mahasiswa </strong><strong>Tel-U menyukai suatu film</strong>".</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>\( \forall x \exists y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x \forall y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>\( \exists x \exists y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x \forall y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633886  -->
  <question type="multichoice">
    <name>
      <text>Predikat 1: Kuantifikasi bersusun</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Suppose 
\(M(x,y)\) means "student \(x\) loves movie \(y\)" where the domain of 
\(x\) is the set of all students in Tel-U and the domain of \(y\) is the set of all movies. Select a formula that represents the sentence: "<strong>a student in Tel-U likes every movie</strong><strong></strong>."<br></p><p><strong>ID: </strong>Misalkan
 \(M(x,y)\) berarti "mahasiswa \(x\) menyukai film \(y\)" dengan domain 
\(x\) adalah himpunan seluruh mahasiswa di Tel-U dan domain untuk \(y\) 
adalah himpunan seluruh film. Pilihlah formula yang menyatakan: "<strong>seorang mahasiswa </strong><strong>Tel-U menyukai semua film</strong>".</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>\( \forall x \exists y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \forall x \forall y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>\( \exists x \exists y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>\( \exists x \forall y M(x, y)\)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633887  -->
  <question type="multichoice">
    <name>
      <text>Predikat 2: Negasi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>\( \neg \forall x \left( x^{2} &gt; 0 \right) \equiv \)&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\( \exists x \left( x^{2} \leq 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall y \left( y+1 = 2 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \forall y \left( xy \neq 1 \right)\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall x \exists y \left( x+y = 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \exists y \left( \left( xy \right)^{2} &gt; 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633888  -->
  <question type="multichoice">
    <name>
      <text>Predikat 2: Negasi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>\( \neg \exists y \left( y + 1 \neq 2 \right) \equiv \)&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \left( x^{2} \leq 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\( \forall y \left( y+1 = 2 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \forall y \left( xy \neq 1 \right)\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall x \exists y \left( x+y = 2 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \exists y \left( \left( xy \right)^{2} &gt; 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633889  -->
  <question type="multichoice">
    <name>
      <text>Predikat 2: Negasi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>\( \neg \forall x \exists y \left( xy =1 \right) \equiv \)&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \left( xy \leq 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall y \left( xy &gt; 2 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\( \exists x \forall y \left( xy \neq 1 \right)\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall x \exists y \left( xy \neq 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \exists y \left(&nbsp; xy &gt; 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633890  -->
  <question type="multichoice">
    <name>
      <text>Predikat 2: Negasi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>\( \neg \exists x \forall y \left( x+y \neq 1 \right) \equiv \)&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \left( x^{2} \leq 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall y \left( x+y = 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \forall y \left( x+y \neq 1 \right)\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\( \forall x \exists y \left( x+y = 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \exists y \left( \left( xy \right)^{2} &gt; 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633891  -->
  <question type="multichoice">
    <name>
      <text>Predikat 2: Negasi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>\( \neg \forall x \forall y&nbsp; \left( \left( xy \right)^{2} \leq 0 \right) \equiv \)&nbsp;</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \forall y \left( \left( xy \right)^{2} \leq 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall y \left( x^{2} = 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \exists x \forall y \left( x+y \neq 1 \right)\)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>\( \forall x \exists y \left( \left( xy&nbsp; \right)^{2} = 1 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>\( \exists x \exists y \left( \left( xy \right)^{2} &gt; 0 \right) \)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633892  -->
  <question type="multichoice">
    <name>
      <text>Predikat 3: Modus Ponens/Tollens</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given \( \forall x ( P(x ) \rightarrow Q (x)) \) and&nbsp; \( P(c) \), and thus we can infer \( Q(c) \). What is the name of this inference rule?</p><p><strong>ID</strong>: Diberikan \( \forall x ( P(x ) 
\rightarrow Q (x)) \) dan \( P(c) \), dan akibatnya kita dapat menyimpulkan \( Q(c) \).
 Apa nama dari aturan inferensi ini?<strong></strong><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text>universal modus ponens (modus ponens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal modus tollens (modus tollens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential instantiation (instansiasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal instantiation (instansiasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential generalization (generalisasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal generalization (generalisasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633893  -->
  <question type="multichoice">
    <name>
      <text>Predikat 3: Modus Ponens/Tollens</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given \( 
\forall x ( P(x ) \rightarrow Q (x)) \) and&nbsp; \( \neg Q(c) \), and thus we can
 infer \( \neg P(c) \). What is the name of this inference rule?</p><p><strong>ID</strong>: Diberikan \( \forall x ( P(x ) 
\rightarrow Q (x)) \) dan \( \neg Q(c) \), dan akibatnya kita dapat menyimpulkan \( \neg P(c) \).
 Apa nama dari aturan inferensi ini?<strong></strong><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>universal modus ponens (modus ponens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>universal modus tollens (modus tollens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential instantiation (instansiasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal instantiation (instansiasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential generalization (generalisasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal generalization (generalisasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633894  -->
  <question type="multichoice">
    <name>
      <text>Predikat 3: Modus Ponens/Tollens</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given \(\forall x P(x)\), we can conclude \(P(a)\) for every \(a \in D\) where \(D\) is the domain of \(x\). What is the name of this rule of inference?</p><p><strong>ID</strong>: Diberikan \(\forall x P(x)\), kita dapat menyimpulkan \(P(a)\) untuk setiap \(a \in D\) dengan \(D\) adalah domain untuk \(x\). What is the name of this rule of inference?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>universal modus ponens (modus ponens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal modus tollens (modus tollens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential instantiation (instansiasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>universal instantiation (instansiasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential generalization (generalisasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal generalization (generalisasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633895  -->
  <question type="multichoice">
    <name>
      <text>Predikat 3: Modus Ponens/Tollens</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given 
\(\exists x P(x)\), we can conclude \(P(a)\) for some particular \(a \in D\) where
 \(D\) is the domain of \(x\). What is the name of this rule of 
inference?</p><p><strong>ID</strong>:
 Diberikan \(\exists x P(x)\), kita dapat menyimpulkan \(P(a)\) untuk 
suatu \(a \in D\) tertentu dengan \(D\) adalah domain untuk \(x\). What is the 
name of this rule of inference?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>true</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="0" format="html">
      <text>universal modus ponens (modus ponens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal modus tollens (modus tollens universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text>existential instantiation (instansiasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text><![CDATA[<p>universal instantiation (instansiasi universal)</p>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>existential generalization (generalisasi eksistensial)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="html">
      <text>universal generalization (generalisasi universal)</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633896  -->
  <question type="multichoice">
    <name>
      <text>Prolog 1</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the following Prolog script:</p><p><strong></strong><strong></strong></p><pre>eats(caterpillar,grass).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;eats(crow,caterpillar). 
eats(caterpillar,herbs).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp;eats(crow,herbs). 
eats(deer,herbs).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eats(crow,grasshopper). 
eats(deer,shrub).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eats(fox,rabbit). 
eats(grasshopper,grass).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;      &nbsp;eats(frog,caterpillar). 
eats(rabbit,herbs).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eats(frog,grasshopper).&nbsp;<br>eats(snake,frog).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  eats(snake,rabbit).&nbsp;<br>eats(hawk,crow).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;eats(hawk,snake).&nbsp;<br>eats(lion,deer).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; eats(lion,fox). </pre><p>and the following Prolog query</p><pre><span> </span><span><span>?- eats(hawk,X).&nbsp;</span></span></pre><p>what are the value of X?<br></p><strong></strong><p></p><p><strong>ID</strong>: Diberikan <em>script</em> Prolog berikut:</p><pre>eats(caterpillar,grass).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;eats(crow,caterpillar). 
eats(caterpillar,herbs).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp;eats(crow,herbs). 
eats(deer,herbs).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eats(crow,grasshopper). 
eats(deer,shrub).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eats(fox,rabbit). 
eats(grasshopper,grass).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;      &nbsp;eats(frog,caterpillar). 
eats(rabbit,herbs).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;eats(frog,grasshopper).&nbsp;<br>eats(snake,frog).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  eats(snake,rabbit).&nbsp;<br>eats(hawk,crow).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;eats(hawk,snake).&nbsp;<br>eats(lion,deer).&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; eats(lion,fox). </pre><p>dan <em>query</em> Prolog berikut<br></p><pre>?- eats(hawk,X).<br></pre><p>apa saja nilai untuk <span>X</span>?<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<pre>X = crow.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<pre>X = snake.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = frog.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = fox.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = deer.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = caterpillar.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = grashopper.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = rabbit.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = shrub.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = grass.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633897  -->
  <question type="multichoice">
    <name>
      <text>Prolog 10</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: The following picture illustrates several colored box above a table.</p><p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"> <strong><br></strong></p><p>The statement "color(g,gray)" means "g is of gray color".</p><p>Given the following Prolog script,</p><p><strong></strong></p><pre><strong>?- color(X, blue).</strong></pre>what are the possible values of X?<strong><br></strong><p></p><p><strong>ID:</strong> Diberikan gambar berikut mengenai beberapa kotak berwarna yang tertumpuk di atas meja.<br></p><p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" class="img-responsive atto_image_button_text-bottom" width="547" height="165"><br></p><p>Pernyataan "color(g, gray) " diartikan "g berwarna <em>gray</em>".</p><p>Jika diberikan <em>script</em> Prolog berikut,</p><pre><strong>?- color(X, blue).</strong></pre><p>apa saja nilai untuk X?<br></p>]]></text>
<file name="prolog 2 (1).png" path="/" encoding="base64"></file>
<file name="prolog 2.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<pre>X = b<sub>1</sub></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<pre>X = b<sub>2</sub></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<pre>X = b<sub>3</sub></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<pre>X = g<br></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<pre>X = w<sub>1</sub><br></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<pre>X = w<sub>2</sub><br></pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633898  -->
  <question type="multichoice">
    <name>
      <text>Prolog 2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose we have the following Prolog script:</p><p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" width="400" height="293"><br></p><pre>Given the query <span><strong>?- eats(X,caterpillar).</strong>&nbsp;</span></pre><p>what are the possible values of X?<br></p><strong><br></strong><p></p><p><strong>ID</strong>: Diberikan script prolog berikut:</p><p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" class="img-responsive atto_image_button_text-bottom" width="400" height="293"><br></p><p></p><pre>Jika diberikan <em>query</em> <span><strong>?- eats(X,caterpillar).</strong>&nbsp;</span><em><span style="font-size: 0.9375rem; color: rgb(33, 37, 41); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;"></span></em></pre><p></p><p>apa saja nilai X yang mungkin?<br></p>]]></text>
<file name="prolog.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<pre>X = crow.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = snake.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<pre>X = frog.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = fox.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = deer.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = caterpillar.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = grashopper.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = rabbit.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = shrub.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = grass.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633899  -->
  <question type="multichoice">
    <name>
      <text>Prolog 5</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given the following Prolog script:<br></p><p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" width="500" height="366"><br></p>and the following definition:<span></span><span><br></span><p></p><pre><strong><span>omnivore(X):- herbivore(X), carnivore(X). </span><span></span><span></span></strong></pre><pre><strong><span>herbivore(X):- eats(X,Y), plant(Y).</span></strong></pre><pre><strong><span></span></strong><span><strong>carnivore(X):- eats(X,Y), animal(Y). </strong><br></span></pre><p><span>what is the value of X if we have the query<br></span></p><p><span></span></p><pre>?- omnivore(X).</pre><strong>ID</strong>: Diberikan <em>script</em> Prolog berikut:<p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" class="img-responsive atto_image_button_text-bottom" width="500" height="366"><br></p><p>Jika diberikan definisi <em>script</em> Prolog,<span style="font-size: 0.9375rem;">&nbsp;</span></p><pre><strong><span style="font-size: 0.9375rem; color: rgb(33, 37, 41); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;">omnivore(X):- herbivore(X), carnivore(X).&nbsp;</span></strong></pre><pre><strong><span style="font-size: 0.9375rem; color: rgb(33, 37, 41); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;">herbivore(X):- eats(X,Y), plant(Y).&nbsp;</span></strong></pre><pre><span style="font-size: 0.9375rem; color: rgb(33, 37, 41); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;"><strong>carnivore(X):- eats(X,Y), animal(Y). </strong>
</span></pre><p><span style="font-size: 0.9375rem; color: rgb(33, 37, 41); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;"><span style="color: rgb(73, 80, 87); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9375rem;">apa hasil keluaran X jika diberikan <em>query</em></span> </span><br></p><pre>?- omnivore(X).<br></pre>]]></text>
<file name="prolog.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = crow.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = snake.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-14.28571" format="html">
      <text><![CDATA[<pre>X = frog.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = fox.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = deer.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = caterpillar.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = grashopper.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = rabbit.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = shrub.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-12.5" format="html">
      <text><![CDATA[<pre>X = grass.</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633900  -->
  <question type="multichoice">
    <name>
      <text>Prolog 9</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: The following picture illustrates several colored box above a table.</p><p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"> <strong><br></strong></p><p>The statement "color(g,gray)" means "g is of gray color".</p><p>Given the following Prolog script,</p><p><strong></strong></p><pre><strong>?- color(w<sub>1</sub>, X).</strong></pre>what are the possible values of X?<strong><br></strong><p></p><p><strong>ID:</strong> Diberikan gambar berikut mengenai beberapa kotak berwarna yang tertumpuk di atas meja.<br></p><p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"><br></p><p>Pernyataan "color(g, gray) " diartikan "g berwarna <em>gray</em>".</p><p>Jika diberikan <em>script</em> Prolog berikut,</p><pre><strong><pre><strong>?- color(w<sub>1</sub>, X).</strong></pre></strong></pre><p>apa saja nilai untuk X?<br></p>]]></text>
<file name="prolog 2 (1).png" path="/" encoding="base64"></file>
<file name="prolog 2.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>none</answernumbering>
    <showstandardinstruction>1</showstandardinstruction>
    <correctfeedback format="html">
      <text>Your answer is correct.</text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text>Your answer is partially correct.</text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text>Your answer is incorrect.</text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-50" format="html">
      <text><![CDATA[<pre>X = gray</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="-50" format="html">
      <text><![CDATA[<pre>X = blue</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<pre>X = white</pre>]]></text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633901  -->
  <question type="numerical">
    <name>
      <text>Logika Predikat 1.7</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> How many different subformulas of the formula</p><p>\(  \exists x ( \exists z P (y, z) \wedge \forall y (\sim Q (y, x) \vee \exists z \sim P (y, z) ) )  \).<br></p><p><strong>ID:</strong> Berapa banyak subformula berbeda pada formula&nbsp;</p><p>\(  \exists x ( \exists z P (y, z) \wedge \forall y (\sim Q (y, x) \vee \exists z \sim P (y, z) ) )  \).<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>10</text>
      <feedback format="html">
        <text></text>
      </feedback>
      <tolerance>0</tolerance>
    </answer>
    <unitgradingtype>0</unitgradingtype>
    <unitpenalty>0.1000000</unitpenalty>
    <showunits>3</showunits>
    <unitsleft>0</unitsleft>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633902  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Kebenaran Formula</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given a predicate \(P(x)\) which states "\(x^2 &lt; 10\)". Determine the truth value of \(\forall x P(x)\) if the domain is the set \(\lbrace 0, 1, 2, 3 \rbrace\). Write T if the formula is true and F is the formula is false.<br></p><p><strong>ID</strong>: Diberikan predikat&nbsp; \(P(x)\) yang menyatakan "\(x^2 &lt; 10\)". Tentukan nilai kebenaran untuk \(\forall x P(x)\) jika domain yang ditinjau adalah himpunan \(\lbrace 0 , 1, 2, 3 \rbrace\). Tulis T jika formula bernilai benar dan F jika formula bernilai salah.<br></p><p><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>T</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633903  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Kebenaran Formula</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given a 
predicate \(P(x)\) which states "\(x^2 &lt; 10\)". Determine the truth 
value of \(\forall x P(x)\) if the domain is the set \(\lbrace 1, 2, 3, 4
 \rbrace\). Write T if the formula is true and F is the formula is 
false.<br></p><p><strong>ID</strong>:
 Diberikan predikat&nbsp; \(P(x)\) yang menyatakan "\(x^2 &lt; 10\)". 
Tentukan nilai kebenaran untuk \(\forall x P(x)\) jika domain yang 
ditinjau adalah himpunan \(\lbrace 1 , 2, 3, 4 \rbrace\). Tulis T jika 
formula bernilai benar dan F jika formula bernilai salah.<br></p><p><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>F</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633904  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Kebenaran Formula</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given a 
predicate \(P(x)\) which states "\(x^2 &gt; 10\)". Determine the truth 
value of \(\exists x P(x)\) if the domain is the set \(\lbrace 1, 2, 3, 4
 \rbrace\). Write T if the formula is true and F is the formula is 
false.<br></p><p><strong>ID</strong>:
 Diberikan predikat&nbsp; \(P(x)\) yang menyatakan "\(x^2 &gt; 10\)". 
Tentukan nilai kebenaran untuk \(\exists x P(x)\) jika domain yang 
ditinjau adalah himpunan \(\lbrace 1 , 2, 3, 4 \rbrace\). Tulis T jika 
formula bernilai benar dan F jika formula bernilai salah.<br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>T</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633905  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Kebenaran Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given a 
predicate \(P(x)\) which states "\(x^2 &gt; 10\)". Determine the truth 
value of \(\exists x P(x)\) if the domain is the set \(\lbrace 0, 1, 2, 3 \rbrace\). Write T if the formula is true and F is the formula is 
false.<br></p><p><strong>ID</strong>:
 Diberikan predikat&nbsp; \(P(x)\) yang menyatakan "\(x^2 &gt; 10\)". 
Tentukan nilai kebenaran untuk \(\exists x P(x)\) jika domain yang 
ditinjau adalah himpunan \(\lbrace 0, 1 , 2, 3 \rbrace\). Tulis T jika 
formula bernilai benar dan F jika formula bernilai salah.<br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>F</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633906  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Semantik Intuitif Formula Logika Predikat</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: Given two predicates \(P(x): x\textrm{ is even}\) and \(Q(x): x\textrm{ is odd}\) which are defined over the set of integers \(\mathbb{Z} = \lbrace \dots, -2, -1,0,1,2,\dots \rbrace\). Determine the truth 
value of the formula \(\forall x P(x) \vee \forall x Q(x)\). Write T if the formula is true or F is the formula is 
false.<br><p></p><p><strong>ID</strong>:
 Diberikan dua predikat \(P(x): x\textrm{ genap}\) dan \(Q(x): x\textrm{ ganjil}\) yang didefinisikan pada himpunan seluruh bulangan bulat \(\mathbb{Z} = 
\lbrace \dots, -2, -1,0,1,2,\dots \rbrace\). Tentukan nilai kebenaran dari formula \(\forall x P(x) \vee \forall x Q(x)\). Tulis T jika formula benar atau F jika formula salah.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>F</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633907  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Semantik Intuitif Formula Logika Predikat</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: Given two 
predicates \(P(x): x\textrm{ is even}\) and \(Q(x): x\textrm{ is odd}\) 
which are defined over the set of integers \(\mathbb{Z} = \lbrace \dots,
 -2, -1,0,1,2,\dots \rbrace\). Determine the truth 
value of the formula \(\forall x (P(x) \vee Q(x))\). Write T if 
the formula is true or F is the formula is 
false.<br><p></p><p><strong>ID</strong>:
 Diberikan dua predikat \(P(x): x\textrm{ genap}\) dan \(Q(x): x\textrm{
 ganjil}\) yang didefinisikan pada himpunan seluruh bulangan bulat 
\(\mathbb{Z} = 
\lbrace \dots, -2, -1,0,1,2,\dots \rbrace\). Tentukan nilai kebenaran 
dari formula \(\forall x (P(x) \vee Q(x))\). Tulis T jika 
formula benar atau F jika formula salah.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>T</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633908  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Semantik Intuitif Formula Logika Predikat (copy)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: Given two 
predicates \(P(x): x\textrm{ is even}\) and \(Q(x): x\textrm{ is odd}\) 
which are defined over the set of integers \(\mathbb{Z} = \lbrace \dots,
 -2, -1,0,1,2,\dots \rbrace\). Determine the truth 
value of the formula \(\exists x (P(x) \wedge Q(x))\). Write T if 
the formula is true or F is the formula is 
false.<br><p></p><p><strong>ID</strong>:
 Diberikan dua predikat \(P(x): x\textrm{ genap}\) dan \(Q(x): x\textrm{
 ganjil}\) yang didefinisikan pada himpunan seluruh bulangan bulat 
\(\mathbb{Z} = 
\lbrace \dots, -2, -1,0,1,2,\dots \rbrace\). Tentukan nilai kebenaran 
dari formula \(\exists x (P(x) \wedge Q(x))\). Tulis T jika 
formula benar atau F jika formula salah.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>F</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633909  -->
  <question type="shortanswer">
    <name>
      <text>Logika Predikat 2: Semantik Intuitif Formula Logika Predikat (existential-conjuction)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: Given two 
predicates \(P(x): x\textrm{ is even}\) and \(Q(x): x\textrm{ is odd}\) 
which are defined over the set of integers \(\mathbb{Z} = \lbrace \dots,
 -2, -1,0,1,2,\dots \rbrace\). Determine the truth 
value of the formula \(\exists x P(x) \wedge \exists x Q(x)\). Write T if 
the formula is true or F is the formula is 
false.<br><p></p><p><strong>ID</strong>:
 Diberikan dua predikat \(P(x): x\textrm{ genap}\) dan \(Q(x): x\textrm{
 ganjil}\) yang didefinisikan pada himpunan seluruh bulangan bulat 
\(\mathbb{Z} = 
\lbrace \dots, -2, -1,0,1,2,\dots \rbrace\). Tentukan nilai kebenaran 
dari formula \(\exists x P(x) \wedge \exists x Q(x)\). Tulis T jika 
formula benar atau F jika formula salah.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>T</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633910  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1: Variabel Terikat dan Variabel Bebas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong>
 Suppose \(P\) is a binary predicate, \(P(x,y)\) is evaluated in the 
domain \(D_1 \times D_2\), then in the expression \(\forall x \in D_1 
P(x,y)\) we have \(x\) is a bounded variable and \(y\) is a free 
variable.<strong><br></strong></p><p><strong>ID</strong><strong>:</strong> Misalkan \(P\) 
adalah predikat biner, \(P(x,y)\) dievaluasi pada domain \(D_1 \times
 D_2\), maka pada ekspresi \(\forall x \in D_1 P(x,y)\) kita memiliki \(x\)
adalah variabel terikat dan \(y\) adalah variabel bebas.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633911  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1: Variabel Terikat dan Variabel Bebas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong>
 Suppose \(P\) is a binary predicate, \(P(x,y)\) is evaluated in the 
domain \(D_1 \times D_2\), then in the expression \(\forall x \in D_1 
P(x,y)\) we have \(x\) and \(y\) are bounded variables.</p><p><strong>ID</strong><strong>:</strong> Misalkan \(P\) 
adalah predikat biner, \(P(x,y)\) dievaluasi pada domain \(D_1 \times
 D_2\), maka pada ekspresi \(\forall x \in D_1 P(x,y)\) kita memiliki \(x\)
dan \(y\) adalah variabel terikat.<br><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633912  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1: Variabel Terikat dan Variabel Bebas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong>
 Suppose \(P\) is a binary predicate, \(P(x,y)\) is evaluated in the 
domain \(D_1 \times D_2\), then in the expression \(\forall y \in D_2
P(x,y)\) we have \(x\) and \(y\) are bounded variables.<br></p><p><strong>ID</strong><strong>:</strong> Misalkan \(P\) 
adalah predikat biner, \(P(x,y)\) dievaluasi pada domain \(D_1 \times
 D_2\), maka pada ekspresi \(\forall y \in D_2 P(x,y)\) kita memiliki \(x\)
dan \(y\) adalah variabel terikat.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633913  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1: Variabel Terikat dan Variabel Bebas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><p><strong>EN:</strong>
 Suppose \(P\) is a binary predicate, \(P(x,y)\) is evaluated in the 
domain \(D_1 \times D_2\), then in the expression \(\forall x \in D_1
P(x,d_2)\) we have \(x\) is a bounded variable and \(y\) is a free variable.<br></p><p><strong>ID</strong><strong>:</strong> Misalkan \(P\) 
adalah predikat biner, \(P(x,y)\) dievaluasi pada domain \(D_1 \times
 D_2\), maka pada ekspresi \(\forall x \in D_1 P(x,d_2)\) kita memiliki \(x\) adalah variable terikat \(y\) adalah variabel bebas.<br>
<br><br></p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633914  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1: Variabel Terikat dan Variabel Bebas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong>
 Suppose \(P\) is a binary predicate, \(P(x,y)\) is evaluated in the 
domain \(D_1 \times D_2\), then in the expression \(\forall x \in D_1 
P(x,d_2)\) we have \(x\) and \(y\) are bounded variables.</p><p><strong>ID</strong><strong>:</strong> Misalkan \(P\) 
adalah predikat biner, \(P(x,y)\) dievaluasi pada domain \(D_1 \times
 D_2\), maka pada ekspresi \(\forall x \in D_1 P(x,d_2)\) kita memiliki \(x\)
dan \(y\) adalah variabel terikat.<br><br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633915  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1: Variabel Terikat dan Variabel Bebas</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN:</strong>
 Suppose \(P\) is a binary predicate, \(P(x,y)\) is evaluated in the 
domain \(D_1 \times D_2\), then in the expression \(\exists x \in D_1 
\forall y \in D_2 P(x,y)\) we have \(x\) and \(y\) are free variables.</p><p><strong>ID</strong><strong>:</strong> Misalkan \(P\) 
adalah predikat biner, \(P(x,y)\) dievaluasi pada domain \(D_1 \times
 D_2\), maka pada ekspresi \(\exists x \in D_1 \forall y \in D_2 P(x,d_2)\) kita memiliki \(x\)
dan \(y\) adalah variabel bebas.<br><br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633916  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1:Presedens Kuantor dan Operator</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p id="yui_3_17_2_1_1549099159114_1494"><strong id="yui_3_17_2_1_1601306275003_5381">EN:</strong> Given an expression «math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»§#8704;«/mo»«mi»x«/mi»«mo»§#160;«/mo»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«/math», then this expression means «math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»§#8704;«/mo»«mi»x«/mi»«mo»(«/mo»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»)«/mo»«/math».<br id="yui_3_17_2_1_1601306275003_5149"></p><p id="yui_3_17_2_1_1601306275003_5086"><strong id="yui_3_17_2_1_1601306275003_5250">ID:</strong> Diberikan ekspresi «math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»§#8704;«/mo»«mi»x«/mi»«mo»§#160;«/mo»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«/math», maka bentuk yang dimaksud adalah&nbsp;«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»§#8704;«/mo»«mi»x«/mi»«mo»(«/mo»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»)«/mo»«/math».<br><br id="yui_3_17_2_1_1549100716034_1855"><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633917  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1:Presedens Kuantor dan Operator</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p id="yui_3_17_2_1_1549099159114_1494"><strong id="yui_3_17_2_1_1601306371426_5309">EN:</strong> Given an expression «math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»§#8704;«/mo»«mi»x«/mi»«mo»§#160;«/mo»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«/math», then this expression means «math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»(«/mo»«mo»§#8704;«/mo»«mi»x«/mi»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«/math».<br id="yui_3_17_2_1_1601306371426_5234"></p><p id="yui_3_17_2_1_1601306371426_5103"><strong id="yui_3_17_2_1_1601306371426_5213">ID:</strong> Diberikan ekspresi «math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»§#8704;«/mo»«mi»x«/mi»«mo»§#160;«/mo»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«/math», maka bentuk yang dimaksud adalah&nbsp;«math xmlns=¨http://www.w3.org/1998/Math/MathML¨»«mo»(«/mo»«mo»§#8704;«/mo»«mi»x«/mi»«mi»P«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«mo»)«/mo»«mo»§#8743;«/mo»«mi»Q«/mi»«mo»(«/mo»«mi»x«/mi»«mo»)«/mo»«/math».<br><br id="yui_3_17_2_1_1549100716034_1855"><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633918  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1.8</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: Check the following statement.</p><p>\( Q (y, x)  \) <em><span>is not a sub formula</span></em> of <span>\( \exists x ( \exists z P (y, z) \wedge \forall y (\sim Q (y, x) \vee \exists z \sim P (y, z) ) ) \).</span><br></p><p><strong>ID:</strong> Periksa pernyataan berikut.&nbsp;</p><p>\( Q (y, x)  \) <em><span>bukan sub formula</span></em> dari&nbsp;<span>\( \exists x ( \exists z P (y, z) \wedge \forall y (\sim Q (y, x) \vee \exists z \sim P (y, z) ) ) \).</span></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633919  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 1.9</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: Check the following statement.</p><p>\( Q (y, x)  \) <em><span class="" style="color: rgb(255, 51, 102);">is a sub formula</span></em> of \( \exists x ( \exists z P (y, z) \wedge \forall y (\sim Q (y, x) \vee \exists z \sim P (y, z) ) ) \).<br></p><p><strong>ID:</strong> Periksa pernyataan berikut.&nbsp;</p><p>\( Q (y, x)  \) <em><span class="" style="color: rgb(255, 51, 102);">adalah </span></em><em><span class="" style="color: rgb(255, 51, 102);">sub formula</span></em> dari&nbsp;\( \exists x ( \exists z P (y, z) \wedge \forall y (\sim Q (y, x) \vee \exists z \sim P (y, z) ) ) \).</p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633920  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 2: Semantik Formula</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose \(\textsf{Likes}(x,y)\) is a binary predicate over the domain \(D_1 \times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2 \rbrace \) with \(D_1 = \lbrace x | x \textrm{ is a student}\rbrace \) and \(D_2 = \lbrace y | y \textrm{ is a food} \rbrace \). The predicate \(\textsf{Likes}(x,y)\) means "(student) \(x\) likes (food) \(y\)". Then, the predicate \(\forall y \exists x \textsf{Likes}(x,y)\) means "everyone loves at least one food". <br></p><strong>ID</strong>: Misalkan \(\textsf{Likes}(x,y)\) 
adalah predikat biner dengan domain \(D_1 \times D_2 = \lbrace (x,y) |
 x \in D_1, y \in D_2 \rbrace \) dengan \(D_1 = \lbrace x | x \textrm{ adalah mahasiswa}
 \rbrace \) dan \(D_2 = \lbrace y | y \textrm{ adalah makanan} \rbrace \). Predikat \(\textsf{Likes}(x,y)\) berarti "(mahasiswa) \(x\) menyukai (makakan) \(y\)". 
Maka, predikat \(\forall y \exists x \textsf{Likes}(x,y)\) berarti "semua orang menyukai setidaknya satu makanan".<strong></strong><br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633921  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 2: Semantik Formula</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose 
\(\textsf{Likes}(x,y)\) is a binary predicate over the domain \(D_1 
\times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2 \rbrace \) with \(D_1 =
 \lbrace x | x \textrm{ is a student}\rbrace \) and \(D_2 = \lbrace y | y
 \textrm{ is a food} \rbrace \). The predicate \(\textsf{Likes}(x,y)\) 
means "(student) \(x\) likes (food) \(y\)". Then, the predicate 
\(\exists y \forall x \textsf{Likes}(x,y)\) means "every food is loved by someone". <br></p><strong>ID</strong>: Misalkan 
\(\textsf{Likes}(x,y)\) 
adalah predikat biner dengan domain \(D_1 \times D_2 = \lbrace (x,y) |
 x \in D_1, y \in D_2 \rbrace \) dengan \(D_1 = \lbrace x | x \textrm{ 
adalah mahasiswa}
 \rbrace \) dan \(D_2 = \lbrace y | y \textrm{ adalah makanan} \rbrace 
\). Predikat \(\textsf{Likes}(x,y)\) berarti "(mahasiswa) \(x\) menyukai
 (makakan) \(y\)". 
Maka, predikat \(\exists y \forall x \textsf{Likes}(x,y)\) berarti "semua makanan disukai oleh setidaknya seseorang".<strong></strong><br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633922  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 2: Semantik Formula (copy)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: Suppose 
\(\textsf{Likes}(x,y)\) is a binary predicate over the domain \(D_1 
\times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2 \rbrace \) with \(D_1 =
 \lbrace x | x \textrm{ is a student}\rbrace \) and \(D_2 = \lbrace y | y
 \textrm{ is a food} \rbrace \). The predicate \(\textsf{Likes}(x,y)\) 
means "(student) \(x\) likes (food) \(y\)". Then, the predicate 
\(\exists y \forall x \textsf{Likes}(x,y)\) means "there is a food which is liked by everyone". <br><p><strong>ID</strong>: Misalkan 
\(\textsf{Likes}(x,y)\) 
adalah predikat biner dengan domain \(D_1 \times D_2 = \lbrace (x,y) |
 x \in D_1, y \in D_2 \rbrace \) dengan \(D_1 = \lbrace x | x \textrm{ 
adalah mahasiswa}
 \rbrace \) dan \(D_2 = \lbrace y | y \textrm{ adalah makanan} \rbrace 
\). Predikat \(\textsf{Likes}(x,y)\) berarti "(mahasiswa) \(x\) menyukai
 (makakan) \(y\)". 
Maka, predikat \(\exists y \forall x \textsf{Likes}(x,y)\) berarti "ada makanan yang disukai oleh semua orang".<strong></strong><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633923  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 2.2</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: The negation of "all integers are real numbers" is "all integers are not real numbers".<p><strong>ID</strong>: Negasi dari pernyataan "semua bilangan bulat adalah bilangan real" adalah "semua bilangan bulat bukan bilangan real". <br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633924  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Inferensi Formula Kesimpulan</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Determine the truth value of the following inference.</p><p>All students in mathematical logic class also take calculus. Andre is a student in mathematical logic class. Benny does not take calculus. Then Andre takes calculus and Benny is not in mathematical logic class.<br></p><p><strong>ID</strong>: Tentukan nilai kebenaran dari inferensi berikut.</p><p>Semua mahasiswa di kelas logika matematika juga mengambil kalkulus. Andre adalah mahasiswa di kelas logika matematika. Benny tidak mengambil kalkulus. Maka Andre mengambil kalkulus dan Benny tidak ada di kelas logika matematika.<br></p><p><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633925  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Inferensi Formula Kesimpulan</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Determine the truth value of the following inference.</p><p>All
 students in mathematical logic class also take calculus. Andre is a 
student in mathematical logic class. Benny does not take calculus. Then Andre does not take calculus and Benny is in mathematical logic class.<br></p><p><strong>ID</strong>: Tentukan nilai kebenaran dari inferensi berikut.</p><p>Semua
 mahasiswa di kelas logika matematika juga mengambil kalkulus. Andre 
adalah mahasiswa di kelas logika matematika. Benny tidak mengambil 
kalkulus. Maka Andre tidak mengambil kalkulus dan Benny ada di kelas 
logika matematika.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633926  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Inferensi Formula Kesimpulan</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: Determine the truth value of the following inference.</p><p>Some students in this class have never read the textbook. All students in this class passed the final exam. Then someone in this class passed the final exam without reading the textbook. <br></p><strong>ID</strong>: Tentukan nilai kebenaran dari inferensi berikut.<p></p><p>Beberapa mahasiswa di kelas ini tidak pernah membaca buku teks. Semua mahasiswa di kelas ini lulus ujian akhir. Maka seseorang di kelas ini lulus ujian akhir tanpa membaca buku teks.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633927  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Inferensi Formula Kesimpulan</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p><strong>EN</strong>: Determine the truth value of the following inference.</p><p>All mathematical logic teaching assistants are third-year or fourth-year students. All fourth year students have taken algorithm analysis and cybersecurity courses. Raymond is a mathematical logic teaching assistant who has taken algorithm analysis but has not completed a cybersecurity course. Therefore, all mathematical logic teaching assistants are fourth-year students.<br></p><strong>ID</strong>: Tentukan nilai kebenaran dari inferensi berikut.<p></p>Semua asisten logika matematika adalah mahasiswa tingkat tiga atau tingkat empat. Semua mahasiswa tingkat empat sudah lulus kuliah analisis algoritma dan keamanan siber. Raymond adalah asisten logika matematika yang sudah mengambil analisis algoritma tetapi belum lulus kuliah keamanan siber. Oleh, karena itu, semua asisten logika matematika adalah mahasiswa tingkat empat.<br><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633928  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Translasi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Suppose \(Likes(x,y)\) means student \(x\) likes food \(y\) where the domain of the predicate is \(D_1 \times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2 \rbrace\) with \(D_1 = \lbrace x | x \textrm{ is a student} \rbrace\) and \( D_2 = \lbrace y |y&nbsp; \textrm{ is a food}\rbrace \). Suppose we have \(Ammy,Ben,Carl \in D_1\) and \(burger,crepes,pie,pizza \in D_2\). The formula \(\exists y \forall x Likes (x,y)\) "means someone likes every food".</p><p><strong>ID</strong>: Misalkan \(Likes(x,y)\) berarti mahasiswa \(x\) menyukai makakan \(y\) dengan domain dari predikat adalah \(D_1 \times D_2 = \lbrace (x,y) | x \in D_1,
 y \in D_2 \rbrace\) dengan \(D_1 = \lbrace x | x \textrm{ adalah mahasiswa} 
\rbrace\) dan \( D_2 = \lbrace y |y&nbsp; \textrm{ adalah makanan}\rbrace \). 
Misalkan kita memiliki \(Ammy,Ben,Carl \in D_1\) dan \(burger,crepes,pie,pizza 
\in D_2\). Formula \(\exists y \forall x Likes (x,y)\) berarti "seseorang menyukai semua makanan".<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633929  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Translasi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p><strong>EN</strong>: Suppose 
\(Likes(x,y)\) means student \(x\) likes food \(y\) where the domain of 
the predicate is \(D_1 \times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2
 \rbrace\) with \(D_1 = \lbrace x | x \textrm{ is a student} \rbrace\) 
and \( D_2 = \lbrace y |y&nbsp; \textrm{ is a food}\rbrace \). Suppose we 
have \(Ammy,Ben,Carl \in D_1\) and \(burger,crepes,pie,pizza \in D_2\). 
The formula \(\exists y \forall x Likes (x,y)\) means "there is a food which is liked by everyone".</p><p><strong>ID</strong>:
 Misalkan \(Likes(x,y)\) berarti mahasiswa \(x\) menyukai makakan \(y\) 
dengan domain dari predikat adalah \(D_1 \times D_2 = \lbrace (x,y) | x 
\in D_1,
 y \in D_2 \rbrace\) dengan \(D_1 = \lbrace x | x \textrm{ adalah 
mahasiswa} 
\rbrace\) dan \( D_2 = \lbrace y |y&nbsp; \textrm{ adalah makanan}\rbrace \).
 
Misalkan kita memiliki \(Ammy,Ben,Carl \in D_1\) dan 
\(burger,crepes,pie,pizza 
\in D_2\). Formula \(\exists y \forall x Likes (x,y)\) berarti 
"ada makanan yang disukai semua orang".<br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633930  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Translasi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p><strong>EN</strong>: Suppose 
\(Likes(x,y)\) means student \(x\) likes food \(y\) where the domain of 
the predicate is \(D_1 \times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2
 \rbrace\) with \(D_1 = \lbrace x | x \textrm{ is a student} \rbrace\) 
and \( D_2 = \lbrace y |y&nbsp; \textrm{ is a food}\rbrace \). Suppose we 
have \(Ammy,Ben,Carl \in D_1\) and \(burger,crepes,pie,pizza \in D_2\). 
The formula \( \forall x (Likes(x,burger) \wedge Likes (x,pizza)) \) means "everyone who likes burger also likes pizza".</p><p><strong>ID</strong>:
 Misalkan \(Likes(x,y)\) berarti mahasiswa \(x\) menyukai makakan \(y\) 
dengan domain dari predikat adalah \(D_1 \times D_2 = \lbrace (x,y) | x 
\in D_1,
 y \in D_2 \rbrace\) dengan \(D_1 = \lbrace x | x \textrm{ adalah 
mahasiswa} 
\rbrace\) dan \( D_2 = \lbrace y |y&nbsp; \textrm{ adalah makanan}\rbrace \).
 
Misalkan kita memiliki \(Ammy,Ben,Carl \in D_1\) dan 
\(burger,crepes,pie,pizza 
\in D_2\). Formula \( \forall x (Likes(x,burger) \wedge Likes (x,pizza)) \)&nbsp; berarti 
"semua orang yang menyukai burger juga menyukai pizza".<br></p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633931  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3:Translasi</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p></p><p></p><p></p><p><strong>EN</strong>: Suppose 
\(Likes(x,y)\) means student \(x\) likes food \(y\) where the domain of 
the predicate is \(D_1 \times D_2 = \lbrace (x,y) | x \in D_1, y \in D_2
 \rbrace\) with \(D_1 = \lbrace x | x \textrm{ is a student} \rbrace\) 
and \( D_2 = \lbrace y |y&nbsp; \textrm{ is a food}\rbrace \). Suppose we 
have \(Ammy,Ben,Carl \in D_1\) and \(burger,crepes,pie,pizza \in D_2\). 
The formula \( \exists x (Likes(Ammy,y) \rightarrow Likes (Ben,y)) \) means "there is a food which is liked by both Ammy and Ben".</p><p><strong>ID</strong>:
 Misalkan \(Likes(x,y)\) berarti mahasiswa \(x\) menyukai makakan \(y\) 
dengan domain dari predikat adalah \(D_1 \times D_2 = \lbrace (x,y) | x 
\in D_1,
 y \in D_2 \rbrace\) dengan \(D_1 = \lbrace x | x \textrm{ adalah 
mahasiswa} 
\rbrace\) dan \( D_2 = \lbrace y |y&nbsp; \textrm{ adalah makanan}\rbrace \).
 
Misalkan kita memiliki \(Ammy,Ben,Carl \in D_1\) dan 
\(burger,crepes,pie,pizza 
\in D_2\). Formula \( \exists x (Likes(Ammy,y) \rightarrow Likes (Ben,y)) \) berarti 
"ada makanan yang disukai oleh Ammy dan Ben".<br></p><p></p><p></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633932  -->
  <question type="truefalse">
    <name>
      <text>Logika Predikat 3.10</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Determine the validity of the following inference:</p><ul><li>All cars with automatic transmission are comfortable to drive.</li><li>Dani's car does not use automatic transmission.</li><li>Therefore, Dani's car is not comfortable to drive.<br></li></ul><p>ID: Tentukan keabsahan dari inferensi berikut:</p><ul><li>Semua mobil dengan transmisi otomatis nyaman untuk dikendarai.</li><li>Mobil Dani tidak menggunakan transmisi otomatis.</li><li>Oleh karena itu, Mobil Dani tidak nyaman untuk dikendarai.<br></li></ul>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633933  -->
  <question type="truefalse">
    <name>
      <text>Pemograman Logika</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Prolog was initially developed to reason about natural language processing (human language).<br></p><p><strong>ID</strong>: Tujuan pengembangan Prolog pada saat itu adalah untuk pemrosesan bahasa alami (bahasa manusia).<br><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633934  -->
  <question type="truefalse">
    <name>
      <text>Pemograman Logika</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Prolog predicate must start with a capital letter.<br></p><p><strong>ID</strong>: Penulisan predikat pada skrip Prolog harus diawali dengan huruf kapital.<br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633935  -->
  <question type="truefalse">
    <name>
      <text>Pemograman Logika</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: A comment in Prolog script must start with %. <br></p><p><strong>ID</strong>: Komentar pada skrip Prolog harus diawali dengan tanda %.<br><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633936  -->
  <question type="truefalse">
    <name>
      <text>Predikat 1: ariti</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> Proposition is a predicate with arity 0.<strong><br></strong></p><p><strong>ID:</strong> Proposisi adalah predikat dengan ariti 0.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633937  -->
  <question type="truefalse">
    <name>
      <text>Predikat 1: ariti</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> The truth value of a predicate with arity 0 is always the same (constant).<strong><br></strong></p><p><strong>ID:</strong> Nilai kebenaran predikat dengan ariti 0 selalu sama (konstan).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633938  -->
  <question type="truefalse">
    <name>
      <text>Predikat 1: ariti</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> The truth value of a predicate with arity 1 is always the same (constant).<strong><br></strong></p><p><strong>ID:</strong> Nilai kebenaran predikat dengan ariti 1 selalu sama (konstan).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633939  -->
  <question type="truefalse">
    <name>
      <text>Predikat 1: ariti</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN:</strong> The truth value of a predicate with arity 2 is always the same (constant).<strong><br></strong></p><p><strong>ID:</strong> Nilai kebenaran predikat dengan ariti 2 selalu sama (konstan).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>Logika predikat 1</text>
</tag>
    </tags>
  </question>

<!-- question: 29633940  -->
  <question type="truefalse">
    <name>
      <text>Predikat 2: Negasi Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: The negation of "there is a Tel-U student who loves meatball" is "there is a Tel-U student who does not love meatball".<p></p><p><strong>ID</strong>: Negasi dari pernyataan "ada mahasiswa Tel-U yang menyukai bakso" adalah "ada mahasiswa Tel-U yang tidak menyukai bakso". <br></p><br><b></b><p></p><br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633941  -->
  <question type="truefalse">
    <name>
      <text>Predikat 2: Negasi Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: The negation of "there is a Tel-U student who loves meatball" is "all Tel-U students do not love meatball".<p></p><p></p><p><strong>ID</strong>: Negasi dari pernyataan "ada mahasiswa Tel-U yang menyukai bakso" adalah "semua mahasiswa Tel-U tidak menyukai bakso". <br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633942  -->
  <question type="truefalse">
    <name>
      <text>Predikat 2: Negasi Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: The negation of "every Tel-U student loves meatball" is "all Tel-U students do not love meatball".<p></p><p></p><p><strong>ID</strong>: Negasi dari pernyataan "setiap mahasiswa Tel-U menyukai bakso" adalah "semua mahasiswa Tel-U tidak menyukai bakso". <br></p><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633943  -->
  <question type="truefalse">
    <name>
      <text>Predikat 2: Negasi Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: The negation of "every Tel-U student loves meatball" is "there is a Tel-U student who does not love meatball".<p></p><p></p><p></p><p><strong>ID</strong>: Negasi dari pernyataan "setiap mahasiswa Tel-U menyukai bakso" adalah "ada mahasiswa Tel-U yang tidak menyukai bakso". <br></p><p></p><strong><br></strong><p></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633944  -->
  <question type="truefalse">
    <name>
      <text>Predikat 2: Negasi Kuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<strong>EN</strong>: The negation of "there is a Tel-U student who does not love meatball" is "all Tel-U students love meatball".<p><p></p><p></p><p></p><p><strong>ID</strong>: Negasi dari pernyataan "ada mahasiswa Tel-U yang tidak menyukai bakso" adalah "semua mahasiswa Tel-U menyukai bakso". <br></p><p></p><strong><br></strong><p></p><br></p><br>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 2</text>
</tag>
    </tags>
  </question>

<!-- question: 29633945  -->
  <question type="truefalse">
    <name>
      <text>Predikat 3: Inferensi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given two premises \( \forall x ( P (x) \rightarrow ( Q( x) \wedge 
 S (x))) \) and \( \forall x ( P ( x ) \wedge R ( x )) \). Then, we can conclude \( \exists x&nbsp; Q ( x) \).<br></p><p><strong>ID</strong>:
 Diketahui premis-premis \( \forall x ( P (x) \rightarrow ( Q( x) \wedge
  S (x))) \) dan \( \forall x ( P ( x ) \wedge R ( x )) \). Maka dapat 
disimpulkan bahwa \( \exists x&nbsp; Q ( x) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633946  -->
  <question type="truefalse">
    <name>
      <text>Predikat 3: Inferensi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given two premises \( \forall x ( P (x) \rightarrow ( Q( x) \wedge 
 S (x))) \) and \( \forall x ( P ( x ) \wedge R ( x )) \). Then, we can conclude \( \exists x&nbsp; S ( x) \).<br></p><p><strong>ID</strong>:
 Diketahui premis-premis \( \forall x ( P (x) \rightarrow ( Q( x) \wedge
  S (x))) \) dan \( \forall x ( P ( x ) \wedge R ( x )) \). Maka dapat 
disimpulkan bahwa \( \exists x&nbsp; S ( x) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633947  -->
  <question type="truefalse">
    <name>
      <text>Predikat 3: Inferensi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given two premises \( \forall x ( P (x) \rightarrow ( Q( x) \wedge 
 S (x))) \) and \( \forall x ( P ( x ) \wedge R ( x )) \). Then, we can conclude \( \forall x&nbsp; Q ( x) \).<br></p><p><strong>ID</strong>:
 Diketahui premis-premis \( \forall x ( P (x) \rightarrow ( Q( x) \wedge
  S (x))) \) dan \( \forall x ( P ( x ) \wedge R ( x )) \). Maka dapat 
disimpulkan bahwa \( \forall x&nbsp; Q ( x) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633948  -->
  <question type="truefalse">
    <name>
      <text>Predikat 3: Inferensi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given two premises \( \forall x ( P (x) \rightarrow ( Q( x) \wedge 
 S (x))) \) and \( \forall x ( P ( x ) \wedge R ( x )) \). Then, we can conclude \( \forall x&nbsp; S ( x) \).<br></p><p><strong>ID</strong>:
 Diketahui premis-premis \( \forall x ( P (x) \rightarrow ( Q( x) \wedge
  S (x))) \) dan \( \forall x ( P ( x ) \wedge R ( x )) \). Maka dapat 
disimpulkan bahwa \( \forall x&nbsp; S ( x) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633949  -->
  <question type="truefalse">
    <name>
      <text>Predikat 3: Inferensi Formula Berkuantor</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given two premises \( \forall x ( P (x) \rightarrow ( Q( x) \wedge 
 S (x))) \) and \( \forall x ( P ( x ) \wedge R ( x )) \). Then, we can conclude \( \exists x&nbsp; R ( x) \).<br></p><p><strong>ID</strong>:
 Diketahui premis-premis \( \forall x ( P (x) \rightarrow ( Q( x) \wedge
  S (x))) \) dan \( \forall x ( P ( x ) \wedge R ( x )) \). Maka dapat 
disimpulkan bahwa \( \exists x&nbsp; R ( x) \).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633950  -->
  <question type="truefalse">
    <name>
      <text>Predikat 3: Inferensi Formula Berkuantor (copy)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: Given two premises \( \forall x ( P (x) \rightarrow ( Q( x) \wedge 
 S (x))) \) and \( \forall x ( P ( x ) \wedge R ( x )) \). Then, we can conclude \( \forall x&nbsp; (R ( x) \vee S(x))\).<br></p><p><strong>ID</strong>:
 Diketahui premis-premis \( \forall x ( P (x) \rightarrow ( Q( x) \wedge
  S (x))) \) dan \( \forall x ( P ( x ) \wedge R ( x )) \). Maka dapat 
disimpulkan bahwa \( \forall x&nbsp; (R ( x) \vee S(x))\).</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>logika predikat 3</text>
</tag>
    </tags>
  </question>

<!-- question: 29633951  -->
  <question type="truefalse">
    <name>
      <text>Prolog 3</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" class="img-responsive atto_image_button_text-bottom" width="500" height="366"><br></p><p><strong>EN</strong>: Using the above script and the definition,</p><p><strong></strong></p><pre><strong>herbivore(X):- eats(X,Y), plant(Y).<br></strong></pre><p></p><p>what is the output of</p><p></p><pre>?- herbivore(frog).&nbsp;</pre><p></p><p><strong>ID</strong>: Dengan <em>script</em> di atas dan definisi berikut,&nbsp;</p><pre><strong>herbivore(X):- eats(X,Y), plant(Y).</strong>&nbsp;</pre><p>apakah hasil dari<br></p><pre>?- herbivore(frog).</pre>]]></text>
<file name="prolog.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633952  -->
  <question type="truefalse">
    <name>
      <text>Prolog 4</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" width="500" height="366"><br></p><p><strong>EN</strong>: Using the above script and the definition,</p><p><strong></strong></p><pre><strong>carnivore(X):- eats(X,Y), animal(Y).<br></strong></pre><p></p><p>what is the output of</p><pre>?- carnivore(crow). &nbsp;</pre><p><strong>ID</strong>: Dengan <em>script</em> di atas dan definisi berikut,&nbsp;</p><pre><strong>carnivore(X):- eats(X,Y), animal(Y).</strong>&nbsp;</pre><p>apakah hasil dari</p><pre>?- carnivore(crow). &nbsp;</pre><pre></pre>]]></text>
<file name="prolog.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633953  -->
  <question type="truefalse">
    <name>
      <text>Prolog 6</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><img src="@@PLUGINFILE@@/prolog.png" alt="" role="presentation" width="500" height="366"><br></p><p><strong>EN</strong>: Using the above script and the definition,</p><p><strong></strong></p><pre><strong>prey(X):- eats(Y,X), animal(Y).<br></strong></pre><p></p><p>what is the output of</p><pre>?- prey(hawk). &nbsp;</pre><p><strong>ID</strong>: Dengan <em>script</em> di atas dan definisi berikut,&nbsp;</p><pre><strong>prey(X):- eats(Y,X), animal(Y).</strong>&nbsp;</pre><p>apakah hasil dari</p><pre>?- prey(hawk). &nbsp;</pre>]]></text>
<file name="prolog 2.png" path="/" encoding="base64"></file>
<file name="prolog.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633954  -->
  <question type="truefalse">
    <name>
      <text>Prolog 7</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: The following picture illustrates several colored box above a table.</p><p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"> <strong><br></strong></p><p>The statement "isabove(g,b<sub>1</sub>)" means "g is exactly above b<sub>1</sub>".</p><p>Given the following Prolog script,</p><p><strong></strong></p><pre><strong>?- isabove(b<sub>2</sub>, w<sub>1</sub>).</strong></pre>what is the output of the program?<strong></strong><strong><br></strong><p></p><p><strong>ID:</strong> Diberikan gambar berikut mengenai beberapa kotak berwarna yang tertumpuk di atas meja.<br></p><p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"><br></p><p>Pernyataan "isabove(g,b<sub>1</sub>)" berarti "g tepat di atas b<sub>1</sub>".</p><p>Jika diberikan <em>script</em> Prolog berikut,<strong><br></strong></p><pre><strong>?- isabove(b<sub>2</sub>, w<sub>1</sub>).</strong></pre>apa keluaran dari program?<strong></strong><strong><br></strong>]]></text>
<file name="prolog 2 (1).png" path="/" encoding="base64">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</file>
<file name="prolog 2.png" path="/" encoding="base64">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</file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

<!-- question: 29633955  -->
  <question type="truefalse">
    <name>
      <text>Prolog 8</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><strong>EN</strong>: The following picture illustrates several colored box above a table.</p>
<p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"> <strong><br></strong></p>
<p>The statement "isabove(g,b<sub>1</sub>)" means "g is exactly above b<sub>1</sub>".</p>
<p>Given the following Prolog script,</p>
<p><strong></strong></p>
<pre><strong>?- isabove(b<sub>2</sub>, b<sub>3</sub>).</strong></pre>what is the output of the program?<strong></strong><strong><br></strong>
<p></p>
<p><strong><br></strong></p>
<p><strong>ID:</strong> Diberikan gambar berikut mengenai beberapa kotak berwarna yang tertumpuk di atas meja.<br></p>
<p><img src="@@PLUGINFILE@@/prolog%202%20%281%29.png" alt="" role="presentation" width="547" height="165"><br></p>
<p>Pernyataan "isabove(g,b<sub>1</sub>)" berarti "g tepat di atas b<sub>1</sub>".</p>
<p>Jika diberikan <em>script</em> Prolog berikut,<strong><br></strong></p>
<pre><strong><pre><strong></strong><strong>?- isabove(b<sub>2</sub>, b<sub>3</sub>)</strong></pre></strong></pre><p>apa keluaran dari program?</p>]]></text>
<file name="prolog 2 (1).png" path="/" encoding="base64">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</file>
<file name="prolog 2.png" path="/" encoding="base64"></file>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text></text>
      </feedback>
    </answer>
    <tags>
      <tag><text>pemograman logika</text>
</tag>
    </tags>
  </question>

</quiz>